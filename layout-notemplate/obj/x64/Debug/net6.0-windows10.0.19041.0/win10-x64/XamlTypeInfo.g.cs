//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace MyShop
{
    public partial class App : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
        private global::MyShop.MyShop_XamlTypeInfo.XamlMetaDataProvider __appProvider;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::MyShop.MyShop_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::MyShop.MyShop_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace MyShop.MyShop_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class XamlMetaDataProvider : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::MyShop.MyShop_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::MyShop.MyShop_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::MyShop.MyShop_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::Windows.Foundation.Metadata.DefaultOverload]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType) 
            { 
                if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByType(type);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::MyShop.MyShop_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType)
            {
                if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByName(typeName);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::MyShop.MyShop_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlMember xamlMember;
            lock (_xamlMembers)
            {
                if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
                {
                    return xamlMember;
                }
                xamlMember = CreateXamlMember(longMemberName);
                if (xamlMember != null)
                {
                    _xamlMembers.Add(longMemberName, xamlMember);
                }
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[132];
            _typeNameTable[0] = "Microsoft.UI.Xaml.Controls.XamlControlsResources";
            _typeNameTable[1] = "Microsoft.UI.Xaml.ResourceDictionary";
            _typeNameTable[2] = "Object";
            _typeNameTable[3] = "Boolean";
            _typeNameTable[4] = "Microsoft.UI.Xaml.Thickness";
            _typeNameTable[5] = "System.ValueType";
            _typeNameTable[6] = "Double";
            _typeNameTable[7] = "Microsoft.UI.Xaml.Media.MicaBackdrop";
            _typeNameTable[8] = "Microsoft.UI.Xaml.Media.SystemBackdrop";
            _typeNameTable[9] = "Microsoft.UI.Composition.SystemBackdrops.MicaKind";
            _typeNameTable[10] = "System.Enum";
            _typeNameTable[11] = "MyShop.MainWindow";
            _typeNameTable[12] = "Microsoft.UI.Xaml.Window";
            _typeNameTable[13] = "MyShop.View.AddProductPage";
            _typeNameTable[14] = "Microsoft.UI.Xaml.Controls.Page";
            _typeNameTable[15] = "Microsoft.UI.Xaml.Controls.UserControl";
            _typeNameTable[16] = "CommunityToolkit.WinUI.UI.Controls.DataGrid";
            _typeNameTable[17] = "Microsoft.UI.Xaml.Controls.Control";
            _typeNameTable[18] = "System.Collections.IEnumerable";
            _typeNameTable[19] = "System.Collections.ObjectModel.ObservableCollection`1<CommunityToolkit.WinUI.UI.Controls.DataGridColumn>";
            _typeNameTable[20] = "System.Collections.ObjectModel.Collection`1<CommunityToolkit.WinUI.UI.Controls.DataGridColumn>";
            _typeNameTable[21] = "CommunityToolkit.WinUI.UI.Controls.DataGridColumn";
            _typeNameTable[22] = "Microsoft.UI.Xaml.DependencyObject";
            _typeNameTable[23] = "Microsoft.UI.Xaml.Style";
            _typeNameTable[24] = "Microsoft.UI.Xaml.Data.Binding";
            _typeNameTable[25] = "Int32";
            _typeNameTable[26] = "System.Nullable`1<CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection>";
            _typeNameTable[27] = "CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection";
            _typeNameTable[28] = "Microsoft.UI.Xaml.Visibility";
            _typeNameTable[29] = "CommunityToolkit.WinUI.UI.Controls.DataGridLength";
            _typeNameTable[30] = "Microsoft.UI.Xaml.Media.Brush";
            _typeNameTable[31] = "CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode";
            _typeNameTable[32] = "CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility";
            _typeNameTable[33] = "CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility";
            _typeNameTable[34] = "Microsoft.UI.Xaml.Controls.ScrollBarVisibility";
            _typeNameTable[35] = "Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger";
            _typeNameTable[36] = "Microsoft.UI.Xaml.DataTemplate";
            _typeNameTable[37] = "CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode";
            _typeNameTable[38] = "CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode";
            _typeNameTable[39] = "String";
            _typeNameTable[40] = "System.Collections.ObjectModel.ObservableCollection`1<Microsoft.UI.Xaml.Style>";
            _typeNameTable[41] = "System.Collections.ObjectModel.Collection`1<Microsoft.UI.Xaml.Style>";
            _typeNameTable[42] = "System.Collections.IList";
            _typeNameTable[43] = "CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn";
            _typeNameTable[44] = "CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn";
            _typeNameTable[45] = "Windows.UI.Text.FontWeight";
            _typeNameTable[46] = "Microsoft.UI.Xaml.Media.FontFamily";
            _typeNameTable[47] = "Windows.UI.Text.FontStyle";
            _typeNameTable[48] = "CommunityToolkit.WinUI.UI.Controls.DataGridTemplateColumn";
            _typeNameTable[49] = "MyShop.View.CategoryPage";
            _typeNameTable[50] = "MyShop.View.CustomerPage";
            _typeNameTable[51] = "MyShop.View.DashboardPage";
            _typeNameTable[52] = "System.Collections.ObjectModel.ObservableCollection`1<MyShop.Model.DashboardItem>";
            _typeNameTable[53] = "System.Collections.ObjectModel.Collection`1<MyShop.Model.DashboardItem>";
            _typeNameTable[54] = "MyShop.Model.DashboardItem";
            _typeNameTable[55] = "System.DateTime";
            _typeNameTable[56] = "MyShop.View.LoginPage";
            _typeNameTable[57] = "MyShop.View.OrdersPage";
            _typeNameTable[58] = "MyShop.View.ProductsPage";
            _typeNameTable[59] = "MyShop.View.SettingsPage";
            _typeNameTable[60] = "MyShop.ViewModel.SettingsViewModel";
            _typeNameTable[61] = "CommunityToolkit.Mvvm.ComponentModel.ObservableObject";
            _typeNameTable[62] = "Microsoft.UI.Xaml.Controls.NavigationView";
            _typeNameTable[63] = "Microsoft.UI.Xaml.Controls.ContentControl";
            _typeNameTable[64] = "Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible";
            _typeNameTable[65] = "System.Collections.Generic.IList`1<Object>";
            _typeNameTable[66] = "Microsoft.UI.Xaml.UIElement";
            _typeNameTable[67] = "Microsoft.UI.Xaml.Controls.AutoSuggestBox";
            _typeNameTable[68] = "Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode";
            _typeNameTable[69] = "Microsoft.UI.Xaml.Controls.StyleSelector";
            _typeNameTable[70] = "Microsoft.UI.Xaml.Controls.DataTemplateSelector";
            _typeNameTable[71] = "Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode";
            _typeNameTable[72] = "Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode";
            _typeNameTable[73] = "Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus";
            _typeNameTable[74] = "Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled";
            _typeNameTable[75] = "Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings";
            _typeNameTable[76] = "Microsoft.UI.Xaml.CornerRadius";
            _typeNameTable[77] = "Microsoft.UI.Xaml.Controls.NavigationViewItem";
            _typeNameTable[78] = "Microsoft.UI.Xaml.Controls.NavigationViewItemBase";
            _typeNameTable[79] = "Microsoft.UI.Xaml.Controls.IconElement";
            _typeNameTable[80] = "Microsoft.UI.Xaml.Controls.InfoBadge";
            _typeNameTable[81] = "MyShop.View.ShellPage";
            _typeNameTable[82] = "Syncfusion.UI.Xaml.Charts.SfCartesianChart";
            _typeNameTable[83] = "Syncfusion.UI.Xaml.Charts.ChartBase";
            _typeNameTable[84] = "Syncfusion.UI.Xaml.Charts.CartesianSeriesCollection";
            _typeNameTable[85] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.CartesianSeries>";
            _typeNameTable[86] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.CartesianSeries>";
            _typeNameTable[87] = "Syncfusion.UI.Xaml.Charts.CartesianSeries";
            _typeNameTable[88] = "Syncfusion.UI.Xaml.Charts.ChartSeries";
            _typeNameTable[89] = "Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings";
            _typeNameTable[90] = "Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings";
            _typeNameTable[91] = "Syncfusion.UI.Xaml.Charts.DataPointSelectionBehavior";
            _typeNameTable[92] = "Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior";
            _typeNameTable[93] = "Syncfusion.UI.Xaml.Charts.ChartBehavior";
            _typeNameTable[94] = "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Media.Brush>";
            _typeNameTable[95] = "Syncfusion.UI.Xaml.Charts.ChartLegendIcon";
            _typeNameTable[96] = "TimeSpan";
            _typeNameTable[97] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartAxis>";
            _typeNameTable[98] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartAxis>";
            _typeNameTable[99] = "Syncfusion.UI.Xaml.Charts.ChartAxis";
            _typeNameTable[100] = "Syncfusion.UI.Xaml.Charts.LabelStyle";
            _typeNameTable[101] = "Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode";
            _typeNameTable[102] = "Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction";
            _typeNameTable[103] = "Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode";
            _typeNameTable[104] = "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.RangeAxisBase>";
            _typeNameTable[105] = "System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.RangeAxisBase>";
            _typeNameTable[106] = "Syncfusion.UI.Xaml.Charts.RangeAxisBase";
            _typeNameTable[107] = "Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode";
            _typeNameTable[108] = "Syncfusion.UI.Xaml.Charts.SeriesSelectionBehavior";
            _typeNameTable[109] = "Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior";
            _typeNameTable[110] = "Syncfusion.UI.Xaml.Charts.ChartTrackballBehavior";
            _typeNameTable[111] = "Syncfusion.UI.Xaml.Charts.ChartCrosshairBehavior";
            _typeNameTable[112] = "Syncfusion.UI.Xaml.Charts.ChartLegend";
            _typeNameTable[113] = "Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior";
            _typeNameTable[114] = "Microsoft.UI.Xaml.HorizontalAlignment";
            _typeNameTable[115] = "Microsoft.UI.Xaml.VerticalAlignment";
            _typeNameTable[116] = "Syncfusion.UI.Xaml.Charts.CategoryAxis";
            _typeNameTable[117] = "Syncfusion.UI.Xaml.Charts.LabelPlacement";
            _typeNameTable[118] = "Syncfusion.UI.Xaml.Charts.NumericalAxis";
            _typeNameTable[119] = "Syncfusion.UI.Xaml.Charts.NumericalPadding";
            _typeNameTable[120] = "Syncfusion.UI.Xaml.Charts.SplineSeries";
            _typeNameTable[121] = "Syncfusion.UI.Xaml.Charts.XyDataSeries";
            _typeNameTable[122] = "Syncfusion.UI.Xaml.Charts.SplineType";
            _typeNameTable[123] = "Microsoft.UI.Xaml.Media.DoubleCollection";
            _typeNameTable[124] = "Syncfusion.UI.Xaml.Charts.BarLabelAlignment";
            _typeNameTable[125] = "Syncfusion.UI.Xaml.Charts.DataLabelPosition";
            _typeNameTable[126] = "Syncfusion.UI.Xaml.Charts.LabelContext";
            _typeNameTable[127] = "MyShop.View.StatisticsPage";
            _typeNameTable[128] = "Microsoft.UI.Xaml.Controls.TreeViewNode";
            _typeNameTable[129] = "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>";
            _typeNameTable[130] = "Syncfusion.UI.Xaml.Core.DoubleToObjectConverter";
            _typeNameTable[131] = "Syncfusion.UI.Xaml.Core.DoubleToVisibilityConverter";

            _typeTable = new global::System.Type[132];
            _typeTable[0] = typeof(global::Microsoft.UI.Xaml.Controls.XamlControlsResources);
            _typeTable[1] = typeof(global::Microsoft.UI.Xaml.ResourceDictionary);
            _typeTable[2] = typeof(global::System.Object);
            _typeTable[3] = typeof(global::System.Boolean);
            _typeTable[4] = typeof(global::Microsoft.UI.Xaml.Thickness);
            _typeTable[5] = typeof(global::System.ValueType);
            _typeTable[6] = typeof(global::System.Double);
            _typeTable[7] = typeof(global::Microsoft.UI.Xaml.Media.MicaBackdrop);
            _typeTable[8] = typeof(global::Microsoft.UI.Xaml.Media.SystemBackdrop);
            _typeTable[9] = typeof(global::Microsoft.UI.Composition.SystemBackdrops.MicaKind);
            _typeTable[10] = typeof(global::System.Enum);
            _typeTable[11] = typeof(global::MyShop.MainWindow);
            _typeTable[12] = typeof(global::Microsoft.UI.Xaml.Window);
            _typeTable[13] = typeof(global::MyShop.View.AddProductPage);
            _typeTable[14] = typeof(global::Microsoft.UI.Xaml.Controls.Page);
            _typeTable[15] = typeof(global::Microsoft.UI.Xaml.Controls.UserControl);
            _typeTable[16] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGrid);
            _typeTable[17] = typeof(global::Microsoft.UI.Xaml.Controls.Control);
            _typeTable[18] = typeof(global::System.Collections.IEnumerable);
            _typeTable[19] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn>);
            _typeTable[20] = typeof(global::System.Collections.ObjectModel.Collection<global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn>);
            _typeTable[21] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn);
            _typeTable[22] = typeof(global::Microsoft.UI.Xaml.DependencyObject);
            _typeTable[23] = typeof(global::Microsoft.UI.Xaml.Style);
            _typeTable[24] = typeof(global::Microsoft.UI.Xaml.Data.Binding);
            _typeTable[25] = typeof(global::System.Int32);
            _typeTable[26] = typeof(global::System.Nullable<global::CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection>);
            _typeTable[27] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection);
            _typeTable[28] = typeof(global::Microsoft.UI.Xaml.Visibility);
            _typeTable[29] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridLength);
            _typeTable[30] = typeof(global::Microsoft.UI.Xaml.Media.Brush);
            _typeTable[31] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode);
            _typeTable[32] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility);
            _typeTable[33] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility);
            _typeTable[34] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollBarVisibility);
            _typeTable[35] = typeof(global::Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger);
            _typeTable[36] = typeof(global::Microsoft.UI.Xaml.DataTemplate);
            _typeTable[37] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode);
            _typeTable[38] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode);
            _typeTable[39] = typeof(global::System.String);
            _typeTable[40] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Microsoft.UI.Xaml.Style>);
            _typeTable[41] = typeof(global::System.Collections.ObjectModel.Collection<global::Microsoft.UI.Xaml.Style>);
            _typeTable[42] = typeof(global::System.Collections.IList);
            _typeTable[43] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn);
            _typeTable[44] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn);
            _typeTable[45] = typeof(global::Windows.UI.Text.FontWeight);
            _typeTable[46] = typeof(global::Microsoft.UI.Xaml.Media.FontFamily);
            _typeTable[47] = typeof(global::Windows.UI.Text.FontStyle);
            _typeTable[48] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridTemplateColumn);
            _typeTable[49] = typeof(global::MyShop.View.CategoryPage);
            _typeTable[50] = typeof(global::MyShop.View.CustomerPage);
            _typeTable[51] = typeof(global::MyShop.View.DashboardPage);
            _typeTable[52] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::MyShop.Model.DashboardItem>);
            _typeTable[53] = typeof(global::System.Collections.ObjectModel.Collection<global::MyShop.Model.DashboardItem>);
            _typeTable[54] = typeof(global::MyShop.Model.DashboardItem);
            _typeTable[55] = typeof(global::System.DateTime);
            _typeTable[56] = typeof(global::MyShop.View.LoginPage);
            _typeTable[57] = typeof(global::MyShop.View.OrdersPage);
            _typeTable[58] = typeof(global::MyShop.View.ProductsPage);
            _typeTable[59] = typeof(global::MyShop.View.SettingsPage);
            _typeTable[60] = typeof(global::MyShop.ViewModel.SettingsViewModel);
            _typeTable[61] = typeof(global::CommunityToolkit.Mvvm.ComponentModel.ObservableObject);
            _typeTable[62] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationView);
            _typeTable[63] = typeof(global::Microsoft.UI.Xaml.Controls.ContentControl);
            _typeTable[64] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible);
            _typeTable[65] = typeof(global::System.Collections.Generic.IList<global::System.Object>);
            _typeTable[66] = typeof(global::Microsoft.UI.Xaml.UIElement);
            _typeTable[67] = typeof(global::Microsoft.UI.Xaml.Controls.AutoSuggestBox);
            _typeTable[68] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode);
            _typeTable[69] = typeof(global::Microsoft.UI.Xaml.Controls.StyleSelector);
            _typeTable[70] = typeof(global::Microsoft.UI.Xaml.Controls.DataTemplateSelector);
            _typeTable[71] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode);
            _typeTable[72] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode);
            _typeTable[73] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus);
            _typeTable[74] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled);
            _typeTable[75] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings);
            _typeTable[76] = typeof(global::Microsoft.UI.Xaml.CornerRadius);
            _typeTable[77] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItem);
            _typeTable[78] = typeof(global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase);
            _typeTable[79] = typeof(global::Microsoft.UI.Xaml.Controls.IconElement);
            _typeTable[80] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBadge);
            _typeTable[81] = typeof(global::MyShop.View.ShellPage);
            _typeTable[82] = typeof(global::Syncfusion.UI.Xaml.Charts.SfCartesianChart);
            _typeTable[83] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartBase);
            _typeTable[84] = typeof(global::Syncfusion.UI.Xaml.Charts.CartesianSeriesCollection);
            _typeTable[85] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.CartesianSeries>);
            _typeTable[86] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.CartesianSeries>);
            _typeTable[87] = typeof(global::Syncfusion.UI.Xaml.Charts.CartesianSeries);
            _typeTable[88] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartSeries);
            _typeTable[89] = typeof(global::Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings);
            _typeTable[90] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings);
            _typeTable[91] = typeof(global::Syncfusion.UI.Xaml.Charts.DataPointSelectionBehavior);
            _typeTable[92] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior);
            _typeTable[93] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartBehavior);
            _typeTable[94] = typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Media.Brush>);
            _typeTable[95] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon);
            _typeTable[96] = typeof(global::System.TimeSpan);
            _typeTable[97] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>);
            _typeTable[98] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>);
            _typeTable[99] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartAxis);
            _typeTable[100] = typeof(global::Syncfusion.UI.Xaml.Charts.LabelStyle);
            _typeTable[101] = typeof(global::Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode);
            _typeTable[102] = typeof(global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction);
            _typeTable[103] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode);
            _typeTable[104] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.RangeAxisBase>);
            _typeTable[105] = typeof(global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.RangeAxisBase>);
            _typeTable[106] = typeof(global::Syncfusion.UI.Xaml.Charts.RangeAxisBase);
            _typeTable[107] = typeof(global::Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode);
            _typeTable[108] = typeof(global::Syncfusion.UI.Xaml.Charts.SeriesSelectionBehavior);
            _typeTable[109] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior);
            _typeTable[110] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartTrackballBehavior);
            _typeTable[111] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartCrosshairBehavior);
            _typeTable[112] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartLegend);
            _typeTable[113] = typeof(global::Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior);
            _typeTable[114] = typeof(global::Microsoft.UI.Xaml.HorizontalAlignment);
            _typeTable[115] = typeof(global::Microsoft.UI.Xaml.VerticalAlignment);
            _typeTable[116] = typeof(global::Syncfusion.UI.Xaml.Charts.CategoryAxis);
            _typeTable[117] = typeof(global::Syncfusion.UI.Xaml.Charts.LabelPlacement);
            _typeTable[118] = typeof(global::Syncfusion.UI.Xaml.Charts.NumericalAxis);
            _typeTable[119] = typeof(global::Syncfusion.UI.Xaml.Charts.NumericalPadding);
            _typeTable[120] = typeof(global::Syncfusion.UI.Xaml.Charts.SplineSeries);
            _typeTable[121] = typeof(global::Syncfusion.UI.Xaml.Charts.XyDataSeries);
            _typeTable[122] = typeof(global::Syncfusion.UI.Xaml.Charts.SplineType);
            _typeTable[123] = typeof(global::Microsoft.UI.Xaml.Media.DoubleCollection);
            _typeTable[124] = typeof(global::Syncfusion.UI.Xaml.Charts.BarLabelAlignment);
            _typeTable[125] = typeof(global::Syncfusion.UI.Xaml.Charts.DataLabelPosition);
            _typeTable[126] = typeof(global::Syncfusion.UI.Xaml.Charts.LabelContext);
            _typeTable[127] = typeof(global::MyShop.View.StatisticsPage);
            _typeTable[128] = typeof(global::Microsoft.UI.Xaml.Controls.TreeViewNode);
            _typeTable[129] = typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode>);
            _typeTable[130] = typeof(global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter);
            _typeTable[131] = typeof(global::Syncfusion.UI.Xaml.Core.DoubleToVisibilityConverter);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_XamlControlsResources() { return new global::Microsoft.UI.Xaml.Controls.XamlControlsResources(); }
        private object Activate_7_MicaBackdrop() { return new global::Microsoft.UI.Xaml.Media.MicaBackdrop(); }
        private object Activate_11_MainWindow() { return new global::MyShop.MainWindow(); }
        private object Activate_13_AddProductPage() { return new global::MyShop.View.AddProductPage(); }
        private object Activate_16_DataGrid() { return new global::CommunityToolkit.WinUI.UI.Controls.DataGrid(); }
        private object Activate_19_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn>(); }
        private object Activate_20_Collection() { return new global::System.Collections.ObjectModel.Collection<global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn>(); }
        private object Activate_40_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Microsoft.UI.Xaml.Style>(); }
        private object Activate_41_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Microsoft.UI.Xaml.Style>(); }
        private object Activate_43_DataGridTextColumn() { return new global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn(); }
        private object Activate_48_DataGridTemplateColumn() { return new global::CommunityToolkit.WinUI.UI.Controls.DataGridTemplateColumn(); }
        private object Activate_49_CategoryPage() { return new global::MyShop.View.CategoryPage(); }
        private object Activate_50_CustomerPage() { return new global::MyShop.View.CustomerPage(); }
        private object Activate_51_DashboardPage() { return new global::MyShop.View.DashboardPage(); }
        private object Activate_52_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::MyShop.Model.DashboardItem>(); }
        private object Activate_53_Collection() { return new global::System.Collections.ObjectModel.Collection<global::MyShop.Model.DashboardItem>(); }
        private object Activate_54_DashboardItem() { return new global::MyShop.Model.DashboardItem(); }
        private object Activate_56_LoginPage() { return new global::MyShop.View.LoginPage(); }
        private object Activate_57_OrdersPage() { return new global::MyShop.View.OrdersPage(); }
        private object Activate_58_ProductsPage() { return new global::MyShop.View.ProductsPage(); }
        private object Activate_59_SettingsPage() { return new global::MyShop.View.SettingsPage(); }
        private object Activate_62_NavigationView() { return new global::Microsoft.UI.Xaml.Controls.NavigationView(); }
        private object Activate_75_NavigationViewTemplateSettings() { return new global::Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings(); }
        private object Activate_77_NavigationViewItem() { return new global::Microsoft.UI.Xaml.Controls.NavigationViewItem(); }
        private object Activate_80_InfoBadge() { return new global::Microsoft.UI.Xaml.Controls.InfoBadge(); }
        private object Activate_81_ShellPage() { return new global::MyShop.View.ShellPage(); }
        private object Activate_82_SfCartesianChart() { return new global::Syncfusion.UI.Xaml.Charts.SfCartesianChart(); }
        private object Activate_84_CartesianSeriesCollection() { return new global::Syncfusion.UI.Xaml.Charts.CartesianSeriesCollection(); }
        private object Activate_85_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.CartesianSeries>(); }
        private object Activate_86_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.CartesianSeries>(); }
        private object Activate_89_CartesianDataLabelSettings() { return new global::Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings(); }
        private object Activate_91_DataPointSelectionBehavior() { return new global::Syncfusion.UI.Xaml.Charts.DataPointSelectionBehavior(); }
        private object Activate_97_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>(); }
        private object Activate_98_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>(); }
        private object Activate_100_LabelStyle() { return new global::Syncfusion.UI.Xaml.Charts.LabelStyle(); }
        private object Activate_104_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Syncfusion.UI.Xaml.Charts.RangeAxisBase>(); }
        private object Activate_105_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Syncfusion.UI.Xaml.Charts.RangeAxisBase>(); }
        private object Activate_108_SeriesSelectionBehavior() { return new global::Syncfusion.UI.Xaml.Charts.SeriesSelectionBehavior(); }
        private object Activate_109_ChartZoomPanBehavior() { return new global::Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior(); }
        private object Activate_110_ChartTrackballBehavior() { return new global::Syncfusion.UI.Xaml.Charts.ChartTrackballBehavior(); }
        private object Activate_111_ChartCrosshairBehavior() { return new global::Syncfusion.UI.Xaml.Charts.ChartCrosshairBehavior(); }
        private object Activate_112_ChartLegend() { return new global::Syncfusion.UI.Xaml.Charts.ChartLegend(); }
        private object Activate_113_ChartTooltipBehavior() { return new global::Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior(); }
        private object Activate_116_CategoryAxis() { return new global::Syncfusion.UI.Xaml.Charts.CategoryAxis(); }
        private object Activate_118_NumericalAxis() { return new global::Syncfusion.UI.Xaml.Charts.NumericalAxis(); }
        private object Activate_120_SplineSeries() { return new global::Syncfusion.UI.Xaml.Charts.SplineSeries(); }
        private object Activate_127_StatisticsPage() { return new global::MyShop.View.StatisticsPage(); }
        private object Activate_128_TreeViewNode() { return new global::Microsoft.UI.Xaml.Controls.TreeViewNode(); }
        private object Activate_130_DoubleToObjectConverter() { return new global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter(); }
        private object Activate_131_DoubleToVisibilityConverter() { return new global::Syncfusion.UI.Xaml.Core.DoubleToVisibilityConverter(); }
        private void MapAdd_0_XamlControlsResources(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.Object, global::System.Object>)instance;
            var newKey = (global::System.Object)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_19_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn>)instance;
            var newItem = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)item;
            collection.Add(newItem);
        }
        private void VectorAdd_20_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn>)instance;
            var newItem = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)item;
            collection.Add(newItem);
        }
        private void VectorAdd_40_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Style>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Style)item;
            collection.Add(newItem);
        }
        private void VectorAdd_41_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Style>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Style)item;
            collection.Add(newItem);
        }
        private void VectorAdd_52_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::MyShop.Model.DashboardItem>)instance;
            var newItem = (global::MyShop.Model.DashboardItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_53_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::MyShop.Model.DashboardItem>)instance;
            var newItem = (global::MyShop.Model.DashboardItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_65_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::System.Object>)instance;
            var newItem = (global::System.Object)item;
            collection.Add(newItem);
        }
        private void VectorAdd_84_CartesianSeriesCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.CartesianSeries>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)item;
            collection.Add(newItem);
        }
        private void VectorAdd_85_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.CartesianSeries>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)item;
            collection.Add(newItem);
        }
        private void VectorAdd_86_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.CartesianSeries>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)item;
            collection.Add(newItem);
        }
        private void VectorAdd_94_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Media.Brush>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Media.Brush)item;
            collection.Add(newItem);
        }
        private void VectorAdd_97_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)item;
            collection.Add(newItem);
        }
        private void VectorAdd_98_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.ChartAxis>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)item;
            collection.Add(newItem);
        }
        private void VectorAdd_104_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.RangeAxisBase>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_105_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Syncfusion.UI.Xaml.Charts.RangeAxisBase>)instance;
            var newItem = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)item;
            collection.Add(newItem);
        }
        private void VectorAdd_129_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.TreeViewNode>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)item;
            collection.Add(newItem);
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::MyShop.MyShop_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Microsoft.UI.Xaml.Controls.XamlControlsResources
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.ResourceDictionary"));
                userType.Activator = Activate_0_XamlControlsResources;
                userType.DictionaryAdd = MapAdd_0_XamlControlsResources;
                userType.AddMemberName("UseCompactResources");
                xamlType = userType;
                break;

            case 1:   //  Microsoft.UI.Xaml.ResourceDictionary
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Object
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Boolean
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  Microsoft.UI.Xaml.Thickness
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.AddMemberName("Left");
                userType.AddMemberName("Top");
                userType.AddMemberName("Right");
                userType.AddMemberName("Bottom");
                xamlType = userType;
                break;

            case 5:   //  System.ValueType
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 6:   //  Double
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  Microsoft.UI.Xaml.Media.MicaBackdrop
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Media.SystemBackdrop"));
                userType.Activator = Activate_7_MicaBackdrop;
                userType.AddMemberName("Kind");
                xamlType = userType;
                break;

            case 8:   //  Microsoft.UI.Xaml.Media.SystemBackdrop
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 9:   //  Microsoft.UI.Composition.SystemBackdrops.MicaKind
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Base", global::Microsoft.UI.Composition.SystemBackdrops.MicaKind.Base);
                userType.AddEnumValue("BaseAlt", global::Microsoft.UI.Composition.SystemBackdrops.MicaKind.BaseAlt);
                xamlType = userType;
                break;

            case 10:   //  System.Enum
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 11:   //  MyShop.MainWindow
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Window"));
                userType.Activator = Activate_11_MainWindow;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 12:   //  Microsoft.UI.Xaml.Window
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 13:   //  MyShop.View.AddProductPage
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_13_AddProductPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 14:   //  Microsoft.UI.Xaml.Controls.Page
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 15:   //  Microsoft.UI.Xaml.Controls.UserControl
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  CommunityToolkit.WinUI.UI.Controls.DataGrid
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_16_DataGrid;
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("AutoGenerateColumns");
                userType.AddMemberName("Columns");
                userType.AddMemberName("AlternatingRowBackground");
                userType.AddMemberName("AlternatingRowForeground");
                userType.AddMemberName("AreRowDetailsFrozen");
                userType.AddMemberName("AreRowGroupHeadersFrozen");
                userType.AddMemberName("CanUserReorderColumns");
                userType.AddMemberName("CanUserResizeColumns");
                userType.AddMemberName("CanUserSortColumns");
                userType.AddMemberName("CellStyle");
                userType.AddMemberName("ClipboardCopyMode");
                userType.AddMemberName("ColumnHeaderHeight");
                userType.AddMemberName("ColumnHeaderStyle");
                userType.AddMemberName("ColumnWidth");
                userType.AddMemberName("DataFetchSize");
                userType.AddMemberName("DragIndicatorStyle");
                userType.AddMemberName("DropLocationIndicatorStyle");
                userType.AddMemberName("FrozenColumnCount");
                userType.AddMemberName("GridLinesVisibility");
                userType.AddMemberName("HeadersVisibility");
                userType.AddMemberName("HorizontalGridLinesBrush");
                userType.AddMemberName("HorizontalScrollBarVisibility");
                userType.AddMemberName("IsReadOnly");
                userType.AddMemberName("IsValid");
                userType.AddMemberName("IncrementalLoadingThreshold");
                userType.AddMemberName("IncrementalLoadingTrigger");
                userType.AddMemberName("MaxColumnWidth");
                userType.AddMemberName("MinColumnWidth");
                userType.AddMemberName("RowBackground");
                userType.AddMemberName("RowDetailsTemplate");
                userType.AddMemberName("RowDetailsVisibilityMode");
                userType.AddMemberName("RowForeground");
                userType.AddMemberName("RowHeight");
                userType.AddMemberName("RowHeaderWidth");
                userType.AddMemberName("RowHeaderStyle");
                userType.AddMemberName("RowStyle");
                userType.AddMemberName("SelectionMode");
                userType.AddMemberName("SelectedIndex");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("VerticalGridLinesBrush");
                userType.AddMemberName("VerticalScrollBarVisibility");
                userType.AddMemberName("CurrentColumn");
                userType.AddMemberName("RowGroupHeaderPropertyNameAlternative");
                userType.AddMemberName("RowGroupHeaderStyles");
                userType.AddMemberName("SelectedItems");
                xamlType = userType;
                break;

            case 17:   //  Microsoft.UI.Xaml.Controls.Control
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 18:   //  System.Collections.IEnumerable
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 19:   //  System.Collections.ObjectModel.ObservableCollection`1<CommunityToolkit.WinUI.UI.Controls.DataGridColumn>
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<CommunityToolkit.WinUI.UI.Controls.DataGridColumn>"));
                userType.CollectionAdd = VectorAdd_19_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 20:   //  System.Collections.ObjectModel.Collection`1<CommunityToolkit.WinUI.UI.Controls.DataGridColumn>
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_20_Collection;
                userType.CollectionAdd = VectorAdd_20_Collection;
                xamlType = userType;
                break;

            case 21:   //  CommunityToolkit.WinUI.UI.Controls.DataGridColumn
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.AddMemberName("ActualWidth");
                userType.AddMemberName("CanUserReorder");
                userType.AddMemberName("CanUserResize");
                userType.AddMemberName("CanUserSort");
                userType.AddMemberName("CellStyle");
                userType.AddMemberName("ClipboardContentBinding");
                userType.AddMemberName("DisplayIndex");
                userType.AddMemberName("DragIndicatorStyle");
                userType.AddMemberName("HeaderStyle");
                userType.AddMemberName("Header");
                userType.AddMemberName("IsAutoGenerated");
                userType.AddMemberName("IsFrozen");
                userType.AddMemberName("IsReadOnly");
                userType.AddMemberName("MaxWidth");
                userType.AddMemberName("MinWidth");
                userType.AddMemberName("SortDirection");
                userType.AddMemberName("Tag");
                userType.AddMemberName("Visibility");
                userType.AddMemberName("Width");
                xamlType = userType;
                break;

            case 22:   //  Microsoft.UI.Xaml.DependencyObject
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 23:   //  Microsoft.UI.Xaml.Style
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 24:   //  Microsoft.UI.Xaml.Data.Binding
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 25:   //  Int32
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 26:   //  System.Nullable`1<CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection>
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetBoxedType(GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection"));
                userType.BoxInstance = userType.BoxType<global::CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection>;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 27:   //  CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Ascending", global::CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection.Ascending);
                userType.AddEnumValue("Descending", global::CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection.Descending);
                xamlType = userType;
                break;

            case 28:   //  Microsoft.UI.Xaml.Visibility
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 29:   //  CommunityToolkit.WinUI.UI.Controls.DataGridLength
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.CreateFromStringMethod = x => (global::System.Object)global::CommunityToolkit.WinUI.UI.Controls.DataGridLength.ConvertFromString(x);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 30:   //  Microsoft.UI.Xaml.Media.Brush
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 31:   //  CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode.None);
                userType.AddEnumValue("ExcludeHeader", global::CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode.ExcludeHeader);
                userType.AddEnumValue("IncludeHeader", global::CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode.IncludeHeader);
                xamlType = userType;
                break;

            case 32:   //  CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility.None);
                userType.AddEnumValue("Horizontal", global::CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility.Horizontal);
                userType.AddEnumValue("Vertical", global::CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility.Vertical);
                userType.AddEnumValue("All", global::CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility.All);
                xamlType = userType;
                break;

            case 33:   //  CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility.None);
                userType.AddEnumValue("Column", global::CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility.Column);
                userType.AddEnumValue("Row", global::CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility.Row);
                userType.AddEnumValue("All", global::CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility.All);
                xamlType = userType;
                break;

            case 34:   //  Microsoft.UI.Xaml.Controls.ScrollBarVisibility
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 35:   //  Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 36:   //  Microsoft.UI.Xaml.DataTemplate
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 37:   //  CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("VisibleWhenSelected", global::CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode.VisibleWhenSelected);
                userType.AddEnumValue("Visible", global::CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode.Visible);
                userType.AddEnumValue("Collapsed", global::CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode.Collapsed);
                xamlType = userType;
                break;

            case 38:   //  CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Extended", global::CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode.Extended);
                userType.AddEnumValue("Single", global::CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode.Single);
                xamlType = userType;
                break;

            case 39:   //  String
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 40:   //  System.Collections.ObjectModel.ObservableCollection`1<Microsoft.UI.Xaml.Style>
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Microsoft.UI.Xaml.Style>"));
                userType.CollectionAdd = VectorAdd_40_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 41:   //  System.Collections.ObjectModel.Collection`1<Microsoft.UI.Xaml.Style>
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_41_Collection;
                userType.CollectionAdd = VectorAdd_41_Collection;
                xamlType = userType;
                break;

            case 42:   //  System.Collections.IList
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 43:   //  CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn"));
                userType.Activator = Activate_43_DataGridTextColumn;
                userType.AddMemberName("FontWeight");
                userType.AddMemberName("FontFamily");
                userType.AddMemberName("FontSize");
                userType.AddMemberName("FontStyle");
                userType.AddMemberName("Foreground");
                xamlType = userType;
                break;

            case 44:   //  CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn"));
                userType.AddMemberName("Binding");
                userType.AddMemberName("ClipboardContentBinding");
                userType.AddMemberName("EditingElementStyle");
                userType.AddMemberName("ElementStyle");
                xamlType = userType;
                break;

            case 45:   //  Windows.UI.Text.FontWeight
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 46:   //  Microsoft.UI.Xaml.Media.FontFamily
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 47:   //  Windows.UI.Text.FontStyle
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Normal", global::Windows.UI.Text.FontStyle.Normal);
                userType.AddEnumValue("Oblique", global::Windows.UI.Text.FontStyle.Oblique);
                userType.AddEnumValue("Italic", global::Windows.UI.Text.FontStyle.Italic);
                xamlType = userType;
                break;

            case 48:   //  CommunityToolkit.WinUI.UI.Controls.DataGridTemplateColumn
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn"));
                userType.Activator = Activate_48_DataGridTemplateColumn;
                userType.AddMemberName("CellTemplate");
                userType.AddMemberName("CellEditingTemplate");
                xamlType = userType;
                break;

            case 49:   //  MyShop.View.CategoryPage
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_49_CategoryPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 50:   //  MyShop.View.CustomerPage
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_50_CustomerPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 51:   //  MyShop.View.DashboardPage
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_51_DashboardPage;
                userType.AddMemberName("DashboardItems");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 52:   //  System.Collections.ObjectModel.ObservableCollection`1<MyShop.Model.DashboardItem>
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<MyShop.Model.DashboardItem>"));
                userType.CollectionAdd = VectorAdd_52_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 53:   //  System.Collections.ObjectModel.Collection`1<MyShop.Model.DashboardItem>
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_53_Collection;
                userType.CollectionAdd = VectorAdd_53_Collection;
                xamlType = userType;
                break;

            case 54:   //  MyShop.Model.DashboardItem
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_54_DashboardItem;
                userType.AddMemberName("Id");
                userType.AddMemberName("OrderId");
                userType.AddMemberName("Date");
                userType.AddMemberName("Name");
                userType.AddMemberName("Status");
                userType.AddMemberName("Amount");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 55:   //  System.DateTime
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 56:   //  MyShop.View.LoginPage
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_56_LoginPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 57:   //  MyShop.View.OrdersPage
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_57_OrdersPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 58:   //  MyShop.View.ProductsPage
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_58_ProductsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 59:   //  MyShop.View.SettingsPage
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_59_SettingsPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 60:   //  MyShop.ViewModel.SettingsViewModel
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommunityToolkit.Mvvm.ComponentModel.ObservableObject"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 61:   //  CommunityToolkit.Mvvm.ComponentModel.ObservableObject
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 62:   //  Microsoft.UI.Xaml.Controls.NavigationView
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.Activator = Activate_62_NavigationView;
                userType.AddMemberName("OpenPaneLength");
                userType.AddMemberName("IsBackButtonVisible");
                userType.AddMemberName("IsBackEnabled");
                userType.AddMemberName("MenuItems");
                userType.AddMemberName("PaneFooter");
                userType.AddMemberName("AlwaysShowHeader");
                userType.AddMemberName("AutoSuggestBox");
                userType.AddMemberName("CompactModeThresholdWidth");
                userType.AddMemberName("CompactPaneLength");
                userType.AddMemberName("ContentOverlay");
                userType.AddMemberName("DisplayMode");
                userType.AddMemberName("ExpandedModeThresholdWidth");
                userType.AddMemberName("FooterMenuItems");
                userType.AddMemberName("FooterMenuItemsSource");
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("IsPaneOpen");
                userType.AddMemberName("IsPaneToggleButtonVisible");
                userType.AddMemberName("IsPaneVisible");
                userType.AddMemberName("IsSettingsVisible");
                userType.AddMemberName("IsTitleBarAutoPaddingEnabled");
                userType.AddMemberName("MenuItemContainerStyle");
                userType.AddMemberName("MenuItemContainerStyleSelector");
                userType.AddMemberName("MenuItemTemplate");
                userType.AddMemberName("MenuItemTemplateSelector");
                userType.AddMemberName("MenuItemsSource");
                userType.AddMemberName("OverflowLabelMode");
                userType.AddMemberName("PaneCustomContent");
                userType.AddMemberName("PaneDisplayMode");
                userType.AddMemberName("PaneHeader");
                userType.AddMemberName("PaneTitle");
                userType.AddMemberName("PaneToggleButtonStyle");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("SelectionFollowsFocus");
                userType.AddMemberName("SettingsItem");
                userType.AddMemberName("ShoulderNavigationEnabled");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 63:   //  Microsoft.UI.Xaml.Controls.ContentControl
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 64:   //  Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Collapsed", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Collapsed);
                userType.AddEnumValue("Visible", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Visible);
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible.Auto);
                xamlType = userType;
                break;

            case 65:   //  System.Collections.Generic.IList`1<Object>
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_65_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 66:   //  Microsoft.UI.Xaml.UIElement
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 67:   //  Microsoft.UI.Xaml.Controls.AutoSuggestBox
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 68:   //  Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Minimal", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Minimal);
                userType.AddEnumValue("Compact", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Compact);
                userType.AddEnumValue("Expanded", global::Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode.Expanded);
                xamlType = userType;
                break;

            case 69:   //  Microsoft.UI.Xaml.Controls.StyleSelector
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 70:   //  Microsoft.UI.Xaml.Controls.DataTemplateSelector
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 71:   //  Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("MoreLabel", global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode.MoreLabel);
                userType.AddEnumValue("NoLabel", global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode.NoLabel);
                xamlType = userType;
                break;

            case 72:   //  Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Auto", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Auto);
                userType.AddEnumValue("Left", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Left);
                userType.AddEnumValue("Top", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.Top);
                userType.AddEnumValue("LeftCompact", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.LeftCompact);
                userType.AddEnumValue("LeftMinimal", global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode.LeftMinimal);
                xamlType = userType;
                break;

            case 73:   //  Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Disabled", global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus.Disabled);
                userType.AddEnumValue("Enabled", global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus.Enabled);
                xamlType = userType;
                break;

            case 74:   //  Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("WhenSelectionFollowsFocus", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.WhenSelectionFollowsFocus);
                userType.AddEnumValue("Always", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.Always);
                userType.AddEnumValue("Never", global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled.Never);
                xamlType = userType;
                break;

            case 75:   //  Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 76:   //  Microsoft.UI.Xaml.CornerRadius
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.AddMemberName("TopLeft");
                userType.AddMemberName("TopRight");
                userType.AddMemberName("BottomRight");
                userType.AddMemberName("BottomLeft");
                xamlType = userType;
                break;

            case 77:   //  Microsoft.UI.Xaml.Controls.NavigationViewItem
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItemBase"));
                userType.Activator = Activate_77_NavigationViewItem;
                userType.AddMemberName("Icon");
                userType.AddMemberName("CompactPaneLength");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("InfoBadge");
                userType.AddMemberName("IsChildSelected");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("MenuItems");
                userType.AddMemberName("MenuItemsSource");
                userType.AddMemberName("SelectsOnInvoked");
                xamlType = userType;
                break;

            case 78:   //  Microsoft.UI.Xaml.Controls.NavigationViewItemBase
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ContentControl"));
                userType.AddMemberName("IsSelected");
                xamlType = userType;
                break;

            case 79:   //  Microsoft.UI.Xaml.Controls.IconElement
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 80:   //  Microsoft.UI.Xaml.Controls.InfoBadge
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 81:   //  MyShop.View.ShellPage
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_81_ShellPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 82:   //  Syncfusion.UI.Xaml.Charts.SfCartesianChart
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase"));
                userType.Activator = Activate_82_SfCartesianChart;
                userType.SetContentPropertyName("Syncfusion.UI.Xaml.Charts.SfCartesianChart.Series");
                userType.AddMemberName("Series");
                userType.AddMemberName("PaletteBrushes");
                userType.AddMemberName("XAxes");
                userType.AddMemberName("YAxes");
                userType.AddMemberName("SelectionBehavior");
                userType.AddMemberName("ZoomPanBehavior");
                userType.AddMemberName("TrackballBehavior");
                userType.AddMemberName("CrosshairBehavior");
                userType.AddMemberName("PlotAreaBorderBrush");
                userType.AddMemberName("PlotAreaBorderThickness");
                userType.AddMemberName("PlotAreaBackground");
                userType.AddMemberName("IsTransposed");
                userType.AddMemberName("EnableSideBySideSeriesPlacement");
                xamlType = userType;
                break;

            case 83:   //  Syncfusion.UI.Xaml.Charts.ChartBase
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.AddMemberName("Header");
                userType.AddMemberName("Legend");
                userType.AddMemberName("TooltipBehavior");
                userType.AddMemberName("HorizontalHeaderAlignment");
                userType.AddMemberName("VerticalHeaderAlignment");
                xamlType = userType;
                break;

            case 84:   //  Syncfusion.UI.Xaml.Charts.CartesianSeriesCollection
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.CartesianSeries>"));
                userType.CollectionAdd = VectorAdd_84_CartesianSeriesCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 85:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.CartesianSeries>
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.CartesianSeries>"));
                userType.Activator = Activate_85_ObservableCollection;
                userType.CollectionAdd = VectorAdd_85_ObservableCollection;
                xamlType = userType;
                break;

            case 86:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.CartesianSeries>
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_86_Collection;
                userType.CollectionAdd = VectorAdd_86_Collection;
                xamlType = userType;
                break;

            case 87:   //  Syncfusion.UI.Xaml.Charts.CartesianSeries
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries"));
                userType.AddMemberName("DataLabelSettings");
                userType.AddMemberName("XAxisName");
                userType.AddMemberName("YAxisName");
                userType.AddMemberName("ShowTrackballLabel");
                xamlType = userType;
                break;

            case 88:   //  Syncfusion.UI.Xaml.Charts.ChartSeries
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.AddMemberName("SelectionBehavior");
                userType.AddMemberName("PaletteBrushes");
                userType.AddMemberName("TooltipTemplate");
                userType.AddMemberName("EnableTooltip");
                userType.AddMemberName("ListenPropertyChange");
                userType.AddMemberName("IsSeriesVisible");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("TrackballLabelTemplate");
                userType.AddMemberName("Fill");
                userType.AddMemberName("Label");
                userType.AddMemberName("LegendIcon");
                userType.AddMemberName("LegendIconTemplate");
                userType.AddMemberName("IsVisibleOnLegend");
                userType.AddMemberName("XBindingPath");
                userType.AddMemberName("EnableAnimation");
                userType.AddMemberName("AnimationDuration");
                userType.AddMemberName("Chart");
                userType.AddMemberName("ShowDataLabels");
                xamlType = userType;
                break;

            case 89:   //  Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings"));
                userType.Activator = Activate_89_CartesianDataLabelSettings;
                userType.AddMemberName("BarLabelAlignment");
                userType.AddMemberName("Position");
                xamlType = userType;
                break;

            case 90:   //  Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.AddMemberName("ContentTemplate");
                userType.AddMemberName("Rotation");
                userType.AddMemberName("Background");
                userType.AddMemberName("BorderThickness");
                userType.AddMemberName("BorderBrush");
                userType.AddMemberName("Margin");
                userType.AddMemberName("FontStyle");
                userType.AddMemberName("FontSize");
                userType.AddMemberName("Foreground");
                userType.AddMemberName("UseSeriesPalette");
                userType.AddMemberName("HighlightOnSelection");
                userType.AddMemberName("HorizontalAlignment");
                userType.AddMemberName("VerticalAlignment");
                userType.AddMemberName("ConnectorHeight");
                userType.AddMemberName("ConnectorRotation");
                userType.AddMemberName("ConnectorLineStyle");
                userType.AddMemberName("ShowConnectorLine");
                userType.AddMemberName("FontFamily");
                userType.AddMemberName("Series");
                userType.AddMemberName("Context");
                userType.AddMemberName("Format");
                xamlType = userType;
                break;

            case 91:   //  Syncfusion.UI.Xaml.Charts.DataPointSelectionBehavior
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 92:   //  Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBehavior"));
                xamlType = userType;
                break;

            case 93:   //  Syncfusion.UI.Xaml.Charts.ChartBehavior
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                xamlType = userType;
                break;

            case 94:   //  System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Media.Brush>
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_94_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 95:   //  Syncfusion.UI.Xaml.Charts.ChartLegendIcon
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.None);
                userType.AddEnumValue("SeriesType", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.SeriesType);
                userType.AddEnumValue("Rectangle", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Rectangle);
                userType.AddEnumValue("StraightLine", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.StraightLine);
                userType.AddEnumValue("VerticalLine", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.VerticalLine);
                userType.AddEnumValue("Circle", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Circle);
                userType.AddEnumValue("Diamond", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Diamond);
                userType.AddEnumValue("Pentagon", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Pentagon);
                userType.AddEnumValue("Hexagon", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Hexagon);
                userType.AddEnumValue("Triangle", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Triangle);
                userType.AddEnumValue("InvertedTriangle", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.InvertedTriangle);
                userType.AddEnumValue("Cross", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Cross);
                userType.AddEnumValue("Plus", global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon.Plus);
                xamlType = userType;
                break;

            case 96:   //  TimeSpan
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 97:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartAxis>
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartAxis>"));
                userType.CollectionAdd = VectorAdd_97_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 98:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.ChartAxis>
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_98_Collection;
                userType.CollectionAdd = VectorAdd_98_Collection;
                xamlType = userType;
                break;

            case 99:   //  Syncfusion.UI.Xaml.Charts.ChartAxis
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.AddMemberName("PlotOffsetStart");
                userType.AddMemberName("PlotOffsetEnd");
                userType.AddMemberName("AxisLineOffset");
                userType.AddMemberName("LabelRotation");
                userType.AddMemberName("AxisLineStyle");
                userType.AddMemberName("LabelStyle");
                userType.AddMemberName("Header");
                userType.AddMemberName("HeaderStyle");
                userType.AddMemberName("HeaderTemplate");
                userType.AddMemberName("IsInversed");
                userType.AddMemberName("EdgeLabelsDrawingMode");
                userType.AddMemberName("MajorGridLineStyle");
                userType.AddMemberName("MajorTickStyle");
                userType.AddMemberName("ZoomPosition");
                userType.AddMemberName("ZoomFactor");
                userType.AddMemberName("ShowMajorGridLines");
                userType.AddMemberName("EnableAutoIntervalOnZooming");
                userType.AddMemberName("LabelsIntersectAction");
                userType.AddMemberName("LabelExtent");
                userType.AddMemberName("OpposedPosition");
                userType.AddMemberName("TickLineSize");
                userType.AddMemberName("ShowTrackballLabel");
                userType.AddMemberName("TrackballLabelTemplate");
                userType.AddMemberName("CrosshairLabelTemplate");
                userType.AddMemberName("LabelTemplate");
                userType.AddMemberName("AutoScrollingMode");
                userType.AddMemberName("AutoScrollingDelta");
                xamlType = userType;
                break;

            case 100:   //  Syncfusion.UI.Xaml.Charts.LabelStyle
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 101:   //  Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Center", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode.Center);
                userType.AddEnumValue("Shift", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode.Shift);
                userType.AddEnumValue("Fit", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode.Fit);
                userType.AddEnumValue("Hide", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode.Hide);
                xamlType = userType;
                break;

            case 102:   //  Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.None);
                userType.AddEnumValue("MultipleRows", global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.MultipleRows);
                userType.AddEnumValue("Hide", global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.Hide);
                userType.AddEnumValue("Auto", global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.Auto);
                userType.AddEnumValue("Wrap", global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction.Wrap);
                xamlType = userType;
                break;

            case 103:   //  Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Start", global::Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode.Start);
                userType.AddEnumValue("End", global::Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode.End);
                xamlType = userType;
                break;

            case 104:   //  System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.RangeAxisBase>
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.RangeAxisBase>"));
                userType.CollectionAdd = VectorAdd_104_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 105:   //  System.Collections.ObjectModel.Collection`1<Syncfusion.UI.Xaml.Charts.RangeAxisBase>
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_105_Collection;
                userType.CollectionAdd = VectorAdd_105_Collection;
                xamlType = userType;
                break;

            case 106:   //  Syncfusion.UI.Xaml.Charts.RangeAxisBase
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis"));
                userType.AddMemberName("EdgeLabelsVisibilityMode");
                userType.AddMemberName("MinorTicksPerInterval");
                userType.AddMemberName("MinorTickLineSize");
                userType.AddMemberName("MinorGridLineStyle");
                userType.AddMemberName("MinorTickStyle");
                userType.AddMemberName("ShowMinorGridLines");
                xamlType = userType;
                break;

            case 107:   //  Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode.Default);
                userType.AddEnumValue("AlwaysVisible", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode.AlwaysVisible);
                userType.AddEnumValue("Visible", global::Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode.Visible);
                xamlType = userType;
                break;

            case 108:   //  Syncfusion.UI.Xaml.Charts.SeriesSelectionBehavior
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSelectionBehavior"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 109:   //  Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBehavior"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 110:   //  Syncfusion.UI.Xaml.Charts.ChartTrackballBehavior
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBehavior"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 111:   //  Syncfusion.UI.Xaml.Charts.ChartCrosshairBehavior
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBehavior"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 112:   //  Syncfusion.UI.Xaml.Charts.ChartLegend
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 113:   //  Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBehavior"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 114:   //  Microsoft.UI.Xaml.HorizontalAlignment
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 115:   //  Microsoft.UI.Xaml.VerticalAlignment
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 116:   //  Syncfusion.UI.Xaml.Charts.CategoryAxis
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis"));
                userType.Activator = Activate_116_CategoryAxis;
                userType.AddMemberName("Interval");
                userType.AddMemberName("LabelPlacement");
                xamlType = userType;
                break;

            case 117:   //  Syncfusion.UI.Xaml.Charts.LabelPlacement
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("OnTicks", global::Syncfusion.UI.Xaml.Charts.LabelPlacement.OnTicks);
                userType.AddEnumValue("BetweenTicks", global::Syncfusion.UI.Xaml.Charts.LabelPlacement.BetweenTicks);
                xamlType = userType;
                break;

            case 118:   //  Syncfusion.UI.Xaml.Charts.NumericalAxis
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.RangeAxisBase"));
                userType.Activator = Activate_118_NumericalAxis;
                userType.AddMemberName("Interval");
                userType.AddMemberName("Minimum");
                userType.AddMemberName("Maximum");
                userType.AddMemberName("RangePadding");
                userType.AddMemberName("ActualMinimum");
                userType.AddMemberName("ActualMaximum");
                xamlType = userType;
                break;

            case 119:   //  Syncfusion.UI.Xaml.Charts.NumericalPadding
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Auto", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.Auto);
                userType.AddEnumValue("None", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.None);
                userType.AddEnumValue("Round", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.Round);
                userType.AddEnumValue("Normal", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.Normal);
                userType.AddEnumValue("Additional", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.Additional);
                userType.AddEnumValue("RoundStart", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.RoundStart);
                userType.AddEnumValue("RoundEnd", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.RoundEnd);
                userType.AddEnumValue("PrependInterval", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.PrependInterval);
                userType.AddEnumValue("AppendInterval", global::Syncfusion.UI.Xaml.Charts.NumericalPadding.AppendInterval);
                xamlType = userType;
                break;

            case 120:   //  Syncfusion.UI.Xaml.Charts.SplineSeries
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.XyDataSeries"));
                userType.Activator = Activate_120_SplineSeries;
                userType.AddMemberName("CustomTemplate");
                userType.AddMemberName("Type");
                userType.AddMemberName("StrokeDashArray");
                xamlType = userType;
                break;

            case 121:   //  Syncfusion.UI.Xaml.Charts.XyDataSeries
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CartesianSeries"));
                userType.AddMemberName("YBindingPath");
                userType.AddMemberName("StrokeWidth");
                xamlType = userType;
                break;

            case 122:   //  Syncfusion.UI.Xaml.Charts.SplineType
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Natural", global::Syncfusion.UI.Xaml.Charts.SplineType.Natural);
                userType.AddEnumValue("Monotonic", global::Syncfusion.UI.Xaml.Charts.SplineType.Monotonic);
                userType.AddEnumValue("Cardinal", global::Syncfusion.UI.Xaml.Charts.SplineType.Cardinal);
                userType.AddEnumValue("Clamped", global::Syncfusion.UI.Xaml.Charts.SplineType.Clamped);
                xamlType = userType;
                break;

            case 123:   //  Microsoft.UI.Xaml.Media.DoubleCollection
                xamlType = new global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 124:   //  Syncfusion.UI.Xaml.Charts.BarLabelAlignment
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Top", global::Syncfusion.UI.Xaml.Charts.BarLabelAlignment.Top);
                userType.AddEnumValue("Bottom", global::Syncfusion.UI.Xaml.Charts.BarLabelAlignment.Bottom);
                userType.AddEnumValue("Middle", global::Syncfusion.UI.Xaml.Charts.BarLabelAlignment.Middle);
                xamlType = userType;
                break;

            case 125:   //  Syncfusion.UI.Xaml.Charts.DataLabelPosition
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Default", global::Syncfusion.UI.Xaml.Charts.DataLabelPosition.Default);
                userType.AddEnumValue("Auto", global::Syncfusion.UI.Xaml.Charts.DataLabelPosition.Auto);
                userType.AddEnumValue("Inner", global::Syncfusion.UI.Xaml.Charts.DataLabelPosition.Inner);
                userType.AddEnumValue("Outer", global::Syncfusion.UI.Xaml.Charts.DataLabelPosition.Outer);
                userType.AddEnumValue("Center", global::Syncfusion.UI.Xaml.Charts.DataLabelPosition.Center);
                xamlType = userType;
                break;

            case 126:   //  Syncfusion.UI.Xaml.Charts.LabelContext
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("XValue", global::Syncfusion.UI.Xaml.Charts.LabelContext.XValue);
                userType.AddEnumValue("YValue", global::Syncfusion.UI.Xaml.Charts.LabelContext.YValue);
                userType.AddEnumValue("Percentage", global::Syncfusion.UI.Xaml.Charts.LabelContext.Percentage);
                userType.AddEnumValue("DateTime", global::Syncfusion.UI.Xaml.Charts.LabelContext.DateTime);
                userType.AddEnumValue("DataLabelItem", global::Syncfusion.UI.Xaml.Charts.LabelContext.DataLabelItem);
                xamlType = userType;
                break;

            case 127:   //  MyShop.View.StatisticsPage
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_127_StatisticsPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 128:   //  Microsoft.UI.Xaml.Controls.TreeViewNode
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_128_TreeViewNode;
                userType.AddMemberName("Children");
                userType.AddMemberName("Content");
                userType.AddMemberName("Depth");
                userType.AddMemberName("HasChildren");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("Parent");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 129:   //  System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_129_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 130:   //  Syncfusion.UI.Xaml.Core.DoubleToObjectConverter
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_130_DoubleToObjectConverter;
                userType.AddMemberName("TrueValue");
                userType.AddMemberName("FalseValue");
                userType.AddMemberName("NullValue");
                userType.AddMemberName("GreaterThan");
                userType.AddMemberName("LessThan");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 131:   //  Syncfusion.UI.Xaml.Core.DoubleToVisibilityConverter
                userType = new global::MyShop.MyShop_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Syncfusion.UI.Xaml.Core.DoubleToObjectConverter"));
                userType.Activator = Activate_131_DoubleToVisibilityConverter;
                userType.SetIsBindable();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::CommunityToolkit.WinUI.UI.Controls.CommunityToolkit_WinUI_UI_Controls_DataGrid_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.Chart.WinUI.Syncfusion_Chart_WinUI_Net60_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Syncfusion.Core.WinUI.Syncfusion_Core_WinUI_Net60_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_XamlControlsResources_UseCompactResources(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            return that.UseCompactResources;
        }
        private void set_0_XamlControlsResources_UseCompactResources(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            that.UseCompactResources = (global::System.Boolean)Value;
        }
        private object get_1_Thickness_Left(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            return that.Left;
        }
        private void set_1_Thickness_Left(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            that.Left = (global::System.Double)Value;
        }
        private object get_2_Thickness_Top(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            return that.Top;
        }
        private void set_2_Thickness_Top(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            that.Top = (global::System.Double)Value;
        }
        private object get_3_Thickness_Right(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            return that.Right;
        }
        private void set_3_Thickness_Right(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            that.Right = (global::System.Double)Value;
        }
        private object get_4_Thickness_Bottom(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            return that.Bottom;
        }
        private void set_4_Thickness_Bottom(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Thickness)instance;
            that.Bottom = (global::System.Double)Value;
        }
        private object get_5_MicaBackdrop_Kind(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Media.MicaBackdrop)instance;
            return that.Kind;
        }
        private void set_5_MicaBackdrop_Kind(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Media.MicaBackdrop)instance;
            that.Kind = (global::Microsoft.UI.Composition.SystemBackdrops.MicaKind)Value;
        }
        private object get_6_DataGrid_ItemsSource(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.ItemsSource;
        }
        private void set_6_DataGrid_ItemsSource(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.ItemsSource = (global::System.Collections.IEnumerable)Value;
        }
        private object get_7_DataGrid_AutoGenerateColumns(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.AutoGenerateColumns;
        }
        private void set_7_DataGrid_AutoGenerateColumns(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.AutoGenerateColumns = (global::System.Boolean)Value;
        }
        private object get_8_DataGrid_Columns(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.Columns;
        }
        private object get_9_DataGridColumn_ActualWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.ActualWidth;
        }
        private object get_10_DataGridColumn_CanUserReorder(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.CanUserReorder;
        }
        private void set_10_DataGridColumn_CanUserReorder(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.CanUserReorder = (global::System.Boolean)Value;
        }
        private object get_11_DataGridColumn_CanUserResize(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.CanUserResize;
        }
        private void set_11_DataGridColumn_CanUserResize(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.CanUserResize = (global::System.Boolean)Value;
        }
        private object get_12_DataGridColumn_CanUserSort(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.CanUserSort;
        }
        private void set_12_DataGridColumn_CanUserSort(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.CanUserSort = (global::System.Boolean)Value;
        }
        private object get_13_DataGridColumn_CellStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.CellStyle;
        }
        private void set_13_DataGridColumn_CellStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.CellStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_14_DataGridColumn_ClipboardContentBinding(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.ClipboardContentBinding;
        }
        private void set_14_DataGridColumn_ClipboardContentBinding(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.ClipboardContentBinding = (global::Microsoft.UI.Xaml.Data.Binding)Value;
        }
        private object get_15_DataGridColumn_DisplayIndex(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.DisplayIndex;
        }
        private void set_15_DataGridColumn_DisplayIndex(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.DisplayIndex = (global::System.Int32)Value;
        }
        private object get_16_DataGridColumn_DragIndicatorStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.DragIndicatorStyle;
        }
        private void set_16_DataGridColumn_DragIndicatorStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.DragIndicatorStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_17_DataGridColumn_HeaderStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.HeaderStyle;
        }
        private void set_17_DataGridColumn_HeaderStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.HeaderStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_18_DataGridColumn_Header(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.Header;
        }
        private void set_18_DataGridColumn_Header(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_19_DataGridColumn_IsAutoGenerated(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.IsAutoGenerated;
        }
        private object get_20_DataGridColumn_IsFrozen(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.IsFrozen;
        }
        private object get_21_DataGridColumn_IsReadOnly(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.IsReadOnly;
        }
        private void set_21_DataGridColumn_IsReadOnly(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.IsReadOnly = (global::System.Boolean)Value;
        }
        private object get_22_DataGridColumn_MaxWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.MaxWidth;
        }
        private void set_22_DataGridColumn_MaxWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.MaxWidth = (global::System.Double)Value;
        }
        private object get_23_DataGridColumn_MinWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.MinWidth;
        }
        private void set_23_DataGridColumn_MinWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.MinWidth = (global::System.Double)Value;
        }
        private object get_24_DataGridColumn_SortDirection(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.SortDirection;
        }
        private void set_24_DataGridColumn_SortDirection(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.SortDirection = (global::System.Nullable<global::CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection>)Value;
        }
        private object get_25_DataGridColumn_Tag(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.Tag;
        }
        private void set_25_DataGridColumn_Tag(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.Tag = (global::System.Object)Value;
        }
        private object get_26_DataGridColumn_Visibility(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.Visibility;
        }
        private void set_26_DataGridColumn_Visibility(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.Visibility = (global::Microsoft.UI.Xaml.Visibility)Value;
        }
        private object get_27_DataGridColumn_Width(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.Width;
        }
        private void set_27_DataGridColumn_Width(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.Width = (global::CommunityToolkit.WinUI.UI.Controls.DataGridLength)Value;
        }
        private object get_28_DataGrid_AlternatingRowBackground(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.AlternatingRowBackground;
        }
        private void set_28_DataGrid_AlternatingRowBackground(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.AlternatingRowBackground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_29_DataGrid_AlternatingRowForeground(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.AlternatingRowForeground;
        }
        private void set_29_DataGrid_AlternatingRowForeground(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.AlternatingRowForeground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_30_DataGrid_AreRowDetailsFrozen(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.AreRowDetailsFrozen;
        }
        private void set_30_DataGrid_AreRowDetailsFrozen(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.AreRowDetailsFrozen = (global::System.Boolean)Value;
        }
        private object get_31_DataGrid_AreRowGroupHeadersFrozen(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.AreRowGroupHeadersFrozen;
        }
        private void set_31_DataGrid_AreRowGroupHeadersFrozen(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.AreRowGroupHeadersFrozen = (global::System.Boolean)Value;
        }
        private object get_32_DataGrid_CanUserReorderColumns(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.CanUserReorderColumns;
        }
        private void set_32_DataGrid_CanUserReorderColumns(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.CanUserReorderColumns = (global::System.Boolean)Value;
        }
        private object get_33_DataGrid_CanUserResizeColumns(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.CanUserResizeColumns;
        }
        private void set_33_DataGrid_CanUserResizeColumns(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.CanUserResizeColumns = (global::System.Boolean)Value;
        }
        private object get_34_DataGrid_CanUserSortColumns(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.CanUserSortColumns;
        }
        private void set_34_DataGrid_CanUserSortColumns(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.CanUserSortColumns = (global::System.Boolean)Value;
        }
        private object get_35_DataGrid_CellStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.CellStyle;
        }
        private void set_35_DataGrid_CellStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.CellStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_36_DataGrid_ClipboardCopyMode(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.ClipboardCopyMode;
        }
        private void set_36_DataGrid_ClipboardCopyMode(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.ClipboardCopyMode = (global::CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode)Value;
        }
        private object get_37_DataGrid_ColumnHeaderHeight(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.ColumnHeaderHeight;
        }
        private void set_37_DataGrid_ColumnHeaderHeight(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.ColumnHeaderHeight = (global::System.Double)Value;
        }
        private object get_38_DataGrid_ColumnHeaderStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.ColumnHeaderStyle;
        }
        private void set_38_DataGrid_ColumnHeaderStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.ColumnHeaderStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_39_DataGrid_ColumnWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.ColumnWidth;
        }
        private void set_39_DataGrid_ColumnWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.ColumnWidth = (global::CommunityToolkit.WinUI.UI.Controls.DataGridLength)Value;
        }
        private object get_40_DataGrid_DataFetchSize(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.DataFetchSize;
        }
        private void set_40_DataGrid_DataFetchSize(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.DataFetchSize = (global::System.Double)Value;
        }
        private object get_41_DataGrid_DragIndicatorStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.DragIndicatorStyle;
        }
        private void set_41_DataGrid_DragIndicatorStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.DragIndicatorStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_42_DataGrid_DropLocationIndicatorStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.DropLocationIndicatorStyle;
        }
        private void set_42_DataGrid_DropLocationIndicatorStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.DropLocationIndicatorStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_43_DataGrid_FrozenColumnCount(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.FrozenColumnCount;
        }
        private void set_43_DataGrid_FrozenColumnCount(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.FrozenColumnCount = (global::System.Int32)Value;
        }
        private object get_44_DataGrid_GridLinesVisibility(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.GridLinesVisibility;
        }
        private void set_44_DataGrid_GridLinesVisibility(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.GridLinesVisibility = (global::CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility)Value;
        }
        private object get_45_DataGrid_HeadersVisibility(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.HeadersVisibility;
        }
        private void set_45_DataGrid_HeadersVisibility(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.HeadersVisibility = (global::CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility)Value;
        }
        private object get_46_DataGrid_HorizontalGridLinesBrush(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.HorizontalGridLinesBrush;
        }
        private void set_46_DataGrid_HorizontalGridLinesBrush(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.HorizontalGridLinesBrush = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_47_DataGrid_HorizontalScrollBarVisibility(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.HorizontalScrollBarVisibility;
        }
        private void set_47_DataGrid_HorizontalScrollBarVisibility(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.HorizontalScrollBarVisibility = (global::Microsoft.UI.Xaml.Controls.ScrollBarVisibility)Value;
        }
        private object get_48_DataGrid_IsReadOnly(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.IsReadOnly;
        }
        private void set_48_DataGrid_IsReadOnly(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.IsReadOnly = (global::System.Boolean)Value;
        }
        private object get_49_DataGrid_IsValid(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.IsValid;
        }
        private object get_50_DataGrid_IncrementalLoadingThreshold(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.IncrementalLoadingThreshold;
        }
        private void set_50_DataGrid_IncrementalLoadingThreshold(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.IncrementalLoadingThreshold = (global::System.Double)Value;
        }
        private object get_51_DataGrid_IncrementalLoadingTrigger(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.IncrementalLoadingTrigger;
        }
        private void set_51_DataGrid_IncrementalLoadingTrigger(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.IncrementalLoadingTrigger = (global::Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger)Value;
        }
        private object get_52_DataGrid_MaxColumnWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.MaxColumnWidth;
        }
        private void set_52_DataGrid_MaxColumnWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.MaxColumnWidth = (global::System.Double)Value;
        }
        private object get_53_DataGrid_MinColumnWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.MinColumnWidth;
        }
        private void set_53_DataGrid_MinColumnWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.MinColumnWidth = (global::System.Double)Value;
        }
        private object get_54_DataGrid_RowBackground(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowBackground;
        }
        private void set_54_DataGrid_RowBackground(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowBackground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_55_DataGrid_RowDetailsTemplate(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowDetailsTemplate;
        }
        private void set_55_DataGrid_RowDetailsTemplate(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowDetailsTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_56_DataGrid_RowDetailsVisibilityMode(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowDetailsVisibilityMode;
        }
        private void set_56_DataGrid_RowDetailsVisibilityMode(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowDetailsVisibilityMode = (global::CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode)Value;
        }
        private object get_57_DataGrid_RowForeground(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowForeground;
        }
        private void set_57_DataGrid_RowForeground(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowForeground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_58_DataGrid_RowHeight(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowHeight;
        }
        private void set_58_DataGrid_RowHeight(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowHeight = (global::System.Double)Value;
        }
        private object get_59_DataGrid_RowHeaderWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowHeaderWidth;
        }
        private void set_59_DataGrid_RowHeaderWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowHeaderWidth = (global::System.Double)Value;
        }
        private object get_60_DataGrid_RowHeaderStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowHeaderStyle;
        }
        private void set_60_DataGrid_RowHeaderStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowHeaderStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_61_DataGrid_RowStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowStyle;
        }
        private void set_61_DataGrid_RowStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_62_DataGrid_SelectionMode(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.SelectionMode;
        }
        private void set_62_DataGrid_SelectionMode(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.SelectionMode = (global::CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode)Value;
        }
        private object get_63_DataGrid_SelectedIndex(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.SelectedIndex;
        }
        private void set_63_DataGrid_SelectedIndex(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.SelectedIndex = (global::System.Int32)Value;
        }
        private object get_64_DataGrid_SelectedItem(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.SelectedItem;
        }
        private void set_64_DataGrid_SelectedItem(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_65_DataGrid_VerticalGridLinesBrush(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.VerticalGridLinesBrush;
        }
        private void set_65_DataGrid_VerticalGridLinesBrush(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.VerticalGridLinesBrush = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_66_DataGrid_VerticalScrollBarVisibility(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.VerticalScrollBarVisibility;
        }
        private void set_66_DataGrid_VerticalScrollBarVisibility(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.VerticalScrollBarVisibility = (global::Microsoft.UI.Xaml.Controls.ScrollBarVisibility)Value;
        }
        private object get_67_DataGrid_CurrentColumn(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.CurrentColumn;
        }
        private void set_67_DataGrid_CurrentColumn(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.CurrentColumn = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)Value;
        }
        private object get_68_DataGrid_RowGroupHeaderPropertyNameAlternative(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowGroupHeaderPropertyNameAlternative;
        }
        private void set_68_DataGrid_RowGroupHeaderPropertyNameAlternative(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowGroupHeaderPropertyNameAlternative = (global::System.String)Value;
        }
        private object get_69_DataGrid_RowGroupHeaderStyles(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowGroupHeaderStyles;
        }
        private object get_70_DataGrid_SelectedItems(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.SelectedItems;
        }
        private object get_71_DataGridBoundColumn_Binding(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn)instance;
            return that.Binding;
        }
        private void set_71_DataGridBoundColumn_Binding(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn)instance;
            that.Binding = (global::Microsoft.UI.Xaml.Data.Binding)Value;
        }
        private object get_72_DataGridTextColumn_FontWeight(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            return that.FontWeight;
        }
        private void set_72_DataGridTextColumn_FontWeight(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            that.FontWeight = (global::Windows.UI.Text.FontWeight)Value;
        }
        private object get_73_DataGridTextColumn_FontFamily(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            return that.FontFamily;
        }
        private void set_73_DataGridTextColumn_FontFamily(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            that.FontFamily = (global::Microsoft.UI.Xaml.Media.FontFamily)Value;
        }
        private object get_74_DataGridTextColumn_FontSize(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            return that.FontSize;
        }
        private void set_74_DataGridTextColumn_FontSize(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            that.FontSize = (global::System.Double)Value;
        }
        private object get_75_DataGridTextColumn_FontStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            return that.FontStyle;
        }
        private void set_75_DataGridTextColumn_FontStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            that.FontStyle = (global::Windows.UI.Text.FontStyle)Value;
        }
        private object get_76_DataGridTextColumn_Foreground(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            return that.Foreground;
        }
        private void set_76_DataGridTextColumn_Foreground(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn)instance;
            that.Foreground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_77_DataGridBoundColumn_ClipboardContentBinding(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn)instance;
            return that.ClipboardContentBinding;
        }
        private void set_77_DataGridBoundColumn_ClipboardContentBinding(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn)instance;
            that.ClipboardContentBinding = (global::Microsoft.UI.Xaml.Data.Binding)Value;
        }
        private object get_78_DataGridBoundColumn_EditingElementStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn)instance;
            return that.EditingElementStyle;
        }
        private void set_78_DataGridBoundColumn_EditingElementStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn)instance;
            that.EditingElementStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_79_DataGridBoundColumn_ElementStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn)instance;
            return that.ElementStyle;
        }
        private void set_79_DataGridBoundColumn_ElementStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn)instance;
            that.ElementStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_80_DataGridTemplateColumn_CellTemplate(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTemplateColumn)instance;
            return that.CellTemplate;
        }
        private void set_80_DataGridTemplateColumn_CellTemplate(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTemplateColumn)instance;
            that.CellTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_81_DataGridTemplateColumn_CellEditingTemplate(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTemplateColumn)instance;
            return that.CellEditingTemplate;
        }
        private void set_81_DataGridTemplateColumn_CellEditingTemplate(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridTemplateColumn)instance;
            that.CellEditingTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_82_DashboardPage_DashboardItems(object instance)
        {
            var that = (global::MyShop.View.DashboardPage)instance;
            return that.DashboardItems;
        }
        private object get_83_DashboardItem_Id(object instance)
        {
            var that = (global::MyShop.Model.DashboardItem)instance;
            return that.Id;
        }
        private void set_83_DashboardItem_Id(object instance, object Value)
        {
            var that = (global::MyShop.Model.DashboardItem)instance;
            that.Id = (global::System.Int32)Value;
        }
        private object get_84_DashboardItem_OrderId(object instance)
        {
            var that = (global::MyShop.Model.DashboardItem)instance;
            return that.OrderId;
        }
        private void set_84_DashboardItem_OrderId(object instance, object Value)
        {
            var that = (global::MyShop.Model.DashboardItem)instance;
            that.OrderId = (global::System.Int32)Value;
        }
        private object get_85_DashboardItem_Date(object instance)
        {
            var that = (global::MyShop.Model.DashboardItem)instance;
            return that.Date;
        }
        private void set_85_DashboardItem_Date(object instance, object Value)
        {
            var that = (global::MyShop.Model.DashboardItem)instance;
            that.Date = (global::System.DateTime)Value;
        }
        private object get_86_DashboardItem_Name(object instance)
        {
            var that = (global::MyShop.Model.DashboardItem)instance;
            return that.Name;
        }
        private void set_86_DashboardItem_Name(object instance, object Value)
        {
            var that = (global::MyShop.Model.DashboardItem)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_87_DashboardItem_Status(object instance)
        {
            var that = (global::MyShop.Model.DashboardItem)instance;
            return that.Status;
        }
        private void set_87_DashboardItem_Status(object instance, object Value)
        {
            var that = (global::MyShop.Model.DashboardItem)instance;
            that.Status = (global::System.String)Value;
        }
        private object get_88_DashboardItem_Amount(object instance)
        {
            var that = (global::MyShop.Model.DashboardItem)instance;
            return that.Amount;
        }
        private void set_88_DashboardItem_Amount(object instance, object Value)
        {
            var that = (global::MyShop.Model.DashboardItem)instance;
            that.Amount = (global::System.Double)Value;
        }
        private object get_89_SettingsPage_ViewModel(object instance)
        {
            var that = (global::MyShop.View.SettingsPage)instance;
            return that.ViewModel;
        }
        private object get_90_NavigationView_OpenPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.OpenPaneLength;
        }
        private void set_90_NavigationView_OpenPaneLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.OpenPaneLength = (global::System.Double)Value;
        }
        private object get_91_NavigationView_IsBackButtonVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsBackButtonVisible;
        }
        private void set_91_NavigationView_IsBackButtonVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsBackButtonVisible = (global::Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible)Value;
        }
        private object get_92_NavigationView_IsBackEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsBackEnabled;
        }
        private void set_92_NavigationView_IsBackEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsBackEnabled = (global::System.Boolean)Value;
        }
        private object get_93_NavigationView_MenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItems;
        }
        private object get_94_NavigationView_PaneFooter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneFooter;
        }
        private void set_94_NavigationView_PaneFooter(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneFooter = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_95_NavigationView_AlwaysShowHeader(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.AlwaysShowHeader;
        }
        private void set_95_NavigationView_AlwaysShowHeader(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.AlwaysShowHeader = (global::System.Boolean)Value;
        }
        private object get_96_NavigationView_AutoSuggestBox(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.AutoSuggestBox;
        }
        private void set_96_NavigationView_AutoSuggestBox(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.AutoSuggestBox = (global::Microsoft.UI.Xaml.Controls.AutoSuggestBox)Value;
        }
        private object get_97_NavigationView_CompactModeThresholdWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.CompactModeThresholdWidth;
        }
        private void set_97_NavigationView_CompactModeThresholdWidth(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.CompactModeThresholdWidth = (global::System.Double)Value;
        }
        private object get_98_NavigationView_CompactPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.CompactPaneLength;
        }
        private void set_98_NavigationView_CompactPaneLength(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.CompactPaneLength = (global::System.Double)Value;
        }
        private object get_99_NavigationView_ContentOverlay(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ContentOverlay;
        }
        private void set_99_NavigationView_ContentOverlay(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ContentOverlay = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_100_NavigationView_DisplayMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.DisplayMode;
        }
        private object get_101_NavigationView_ExpandedModeThresholdWidth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ExpandedModeThresholdWidth;
        }
        private void set_101_NavigationView_ExpandedModeThresholdWidth(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ExpandedModeThresholdWidth = (global::System.Double)Value;
        }
        private object get_102_NavigationView_FooterMenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.FooterMenuItems;
        }
        private object get_103_NavigationView_FooterMenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.FooterMenuItemsSource;
        }
        private void set_103_NavigationView_FooterMenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.FooterMenuItemsSource = (global::System.Object)Value;
        }
        private object get_104_NavigationView_Header(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.Header;
        }
        private void set_104_NavigationView_Header(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_105_NavigationView_HeaderTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.HeaderTemplate;
        }
        private void set_105_NavigationView_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.HeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_106_NavigationView_IsPaneOpen(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneOpen;
        }
        private void set_106_NavigationView_IsPaneOpen(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneOpen = (global::System.Boolean)Value;
        }
        private object get_107_NavigationView_IsPaneToggleButtonVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneToggleButtonVisible;
        }
        private void set_107_NavigationView_IsPaneToggleButtonVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneToggleButtonVisible = (global::System.Boolean)Value;
        }
        private object get_108_NavigationView_IsPaneVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsPaneVisible;
        }
        private void set_108_NavigationView_IsPaneVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsPaneVisible = (global::System.Boolean)Value;
        }
        private object get_109_NavigationView_IsSettingsVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsSettingsVisible;
        }
        private void set_109_NavigationView_IsSettingsVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsSettingsVisible = (global::System.Boolean)Value;
        }
        private object get_110_NavigationView_IsTitleBarAutoPaddingEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.IsTitleBarAutoPaddingEnabled;
        }
        private void set_110_NavigationView_IsTitleBarAutoPaddingEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.IsTitleBarAutoPaddingEnabled = (global::System.Boolean)Value;
        }
        private object get_111_NavigationView_MenuItemContainerStyle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemContainerStyle;
        }
        private void set_111_NavigationView_MenuItemContainerStyle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemContainerStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_112_NavigationView_MenuItemContainerStyleSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemContainerStyleSelector;
        }
        private void set_112_NavigationView_MenuItemContainerStyleSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemContainerStyleSelector = (global::Microsoft.UI.Xaml.Controls.StyleSelector)Value;
        }
        private object get_113_NavigationView_MenuItemTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemTemplate;
        }
        private void set_113_NavigationView_MenuItemTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_114_NavigationView_MenuItemTemplateSelector(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemTemplateSelector;
        }
        private void set_114_NavigationView_MenuItemTemplateSelector(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemTemplateSelector = (global::Microsoft.UI.Xaml.Controls.DataTemplateSelector)Value;
        }
        private object get_115_NavigationView_MenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.MenuItemsSource;
        }
        private void set_115_NavigationView_MenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.MenuItemsSource = (global::System.Object)Value;
        }
        private object get_116_NavigationView_OverflowLabelMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.OverflowLabelMode;
        }
        private void set_116_NavigationView_OverflowLabelMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.OverflowLabelMode = (global::Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode)Value;
        }
        private object get_117_NavigationView_PaneCustomContent(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneCustomContent;
        }
        private void set_117_NavigationView_PaneCustomContent(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneCustomContent = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_118_NavigationView_PaneDisplayMode(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneDisplayMode;
        }
        private void set_118_NavigationView_PaneDisplayMode(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneDisplayMode = (global::Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode)Value;
        }
        private object get_119_NavigationView_PaneHeader(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneHeader;
        }
        private void set_119_NavigationView_PaneHeader(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneHeader = (global::Microsoft.UI.Xaml.UIElement)Value;
        }
        private object get_120_NavigationView_PaneTitle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneTitle;
        }
        private void set_120_NavigationView_PaneTitle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneTitle = (global::System.String)Value;
        }
        private object get_121_NavigationView_PaneToggleButtonStyle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.PaneToggleButtonStyle;
        }
        private void set_121_NavigationView_PaneToggleButtonStyle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.PaneToggleButtonStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_122_NavigationView_SelectedItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SelectedItem;
        }
        private void set_122_NavigationView_SelectedItem(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_123_NavigationView_SelectionFollowsFocus(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SelectionFollowsFocus;
        }
        private void set_123_NavigationView_SelectionFollowsFocus(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.SelectionFollowsFocus = (global::Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus)Value;
        }
        private object get_124_NavigationView_SettingsItem(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.SettingsItem;
        }
        private object get_125_NavigationView_ShoulderNavigationEnabled(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.ShoulderNavigationEnabled;
        }
        private void set_125_NavigationView_ShoulderNavigationEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            that.ShoulderNavigationEnabled = (global::Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled)Value;
        }
        private object get_126_NavigationView_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationView)instance;
            return that.TemplateSettings;
        }
        private object get_127_CornerRadius_TopLeft(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.CornerRadius)instance;
            return that.TopLeft;
        }
        private void set_127_CornerRadius_TopLeft(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.CornerRadius)instance;
            that.TopLeft = (global::System.Double)Value;
        }
        private object get_128_CornerRadius_TopRight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.CornerRadius)instance;
            return that.TopRight;
        }
        private void set_128_CornerRadius_TopRight(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.CornerRadius)instance;
            that.TopRight = (global::System.Double)Value;
        }
        private object get_129_CornerRadius_BottomRight(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.CornerRadius)instance;
            return that.BottomRight;
        }
        private void set_129_CornerRadius_BottomRight(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.CornerRadius)instance;
            that.BottomRight = (global::System.Double)Value;
        }
        private object get_130_CornerRadius_BottomLeft(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.CornerRadius)instance;
            return that.BottomLeft;
        }
        private void set_130_CornerRadius_BottomLeft(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.CornerRadius)instance;
            that.BottomLeft = (global::System.Double)Value;
        }
        private object get_131_NavigationViewItem_Icon(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.Icon;
        }
        private void set_131_NavigationViewItem_Icon(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.Icon = (global::Microsoft.UI.Xaml.Controls.IconElement)Value;
        }
        private object get_132_NavigationViewItem_CompactPaneLength(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.CompactPaneLength;
        }
        private object get_133_NavigationViewItem_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_133_NavigationViewItem_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_134_NavigationViewItem_InfoBadge(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.InfoBadge;
        }
        private void set_134_NavigationViewItem_InfoBadge(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.InfoBadge = (global::Microsoft.UI.Xaml.Controls.InfoBadge)Value;
        }
        private object get_135_NavigationViewItem_IsChildSelected(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.IsChildSelected;
        }
        private void set_135_NavigationViewItem_IsChildSelected(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.IsChildSelected = (global::System.Boolean)Value;
        }
        private object get_136_NavigationViewItem_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.IsExpanded;
        }
        private void set_136_NavigationViewItem_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_137_NavigationViewItem_MenuItems(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.MenuItems;
        }
        private object get_138_NavigationViewItem_MenuItemsSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.MenuItemsSource;
        }
        private void set_138_NavigationViewItem_MenuItemsSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.MenuItemsSource = (global::System.Object)Value;
        }
        private object get_139_NavigationViewItem_SelectsOnInvoked(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            return that.SelectsOnInvoked;
        }
        private void set_139_NavigationViewItem_SelectsOnInvoked(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItem)instance;
            that.SelectsOnInvoked = (global::System.Boolean)Value;
        }
        private object get_140_NavigationViewItemBase_IsSelected(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase)instance;
            return that.IsSelected;
        }
        private void set_140_NavigationViewItemBase_IsSelected(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.NavigationViewItemBase)instance;
            that.IsSelected = (global::System.Boolean)Value;
        }
        private object get_141_SfCartesianChart_Series(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.Series;
        }
        private void set_141_SfCartesianChart_Series(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.Series = (global::Syncfusion.UI.Xaml.Charts.CartesianSeriesCollection)Value;
        }
        private object get_142_CartesianSeries_DataLabelSettings(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)instance;
            return that.DataLabelSettings;
        }
        private void set_142_CartesianSeries_DataLabelSettings(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)instance;
            that.DataLabelSettings = (global::Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings)Value;
        }
        private object get_143_CartesianSeries_XAxisName(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)instance;
            return that.XAxisName;
        }
        private void set_143_CartesianSeries_XAxisName(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)instance;
            that.XAxisName = (global::System.String)Value;
        }
        private object get_144_CartesianSeries_YAxisName(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)instance;
            return that.YAxisName;
        }
        private void set_144_CartesianSeries_YAxisName(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)instance;
            that.YAxisName = (global::System.String)Value;
        }
        private object get_145_CartesianSeries_ShowTrackballLabel(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)instance;
            return that.ShowTrackballLabel;
        }
        private void set_145_CartesianSeries_ShowTrackballLabel(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianSeries)instance;
            that.ShowTrackballLabel = (global::System.Boolean)Value;
        }
        private object get_146_ChartSeries_SelectionBehavior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.SelectionBehavior;
        }
        private void set_146_ChartSeries_SelectionBehavior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.SelectionBehavior = (global::Syncfusion.UI.Xaml.Charts.DataPointSelectionBehavior)Value;
        }
        private object get_147_ChartSeries_PaletteBrushes(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.PaletteBrushes;
        }
        private void set_147_ChartSeries_PaletteBrushes(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.PaletteBrushes = (global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Media.Brush>)Value;
        }
        private object get_148_ChartSeries_TooltipTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.TooltipTemplate;
        }
        private void set_148_ChartSeries_TooltipTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.TooltipTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_149_ChartSeries_EnableTooltip(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.EnableTooltip;
        }
        private void set_149_ChartSeries_EnableTooltip(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.EnableTooltip = (global::System.Boolean)Value;
        }
        private object get_150_ChartSeries_ListenPropertyChange(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.ListenPropertyChange;
        }
        private void set_150_ChartSeries_ListenPropertyChange(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.ListenPropertyChange = (global::System.Boolean)Value;
        }
        private object get_151_ChartSeries_IsSeriesVisible(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.IsSeriesVisible;
        }
        private void set_151_ChartSeries_IsSeriesVisible(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.IsSeriesVisible = (global::System.Boolean)Value;
        }
        private object get_152_ChartSeries_ItemsSource(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.ItemsSource;
        }
        private void set_152_ChartSeries_ItemsSource(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.ItemsSource = (global::System.Object)Value;
        }
        private object get_153_ChartSeries_TrackballLabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.TrackballLabelTemplate;
        }
        private void set_153_ChartSeries_TrackballLabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.TrackballLabelTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_154_ChartSeries_Fill(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.Fill;
        }
        private void set_154_ChartSeries_Fill(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.Fill = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_155_ChartSeries_Label(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.Label;
        }
        private void set_155_ChartSeries_Label(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.Label = (global::System.String)Value;
        }
        private object get_156_ChartSeries_LegendIcon(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.LegendIcon;
        }
        private void set_156_ChartSeries_LegendIcon(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.LegendIcon = (global::Syncfusion.UI.Xaml.Charts.ChartLegendIcon)Value;
        }
        private object get_157_ChartSeries_LegendIconTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.LegendIconTemplate;
        }
        private void set_157_ChartSeries_LegendIconTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.LegendIconTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_158_ChartSeries_IsVisibleOnLegend(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.IsVisibleOnLegend;
        }
        private void set_158_ChartSeries_IsVisibleOnLegend(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.IsVisibleOnLegend = (global::System.Boolean)Value;
        }
        private object get_159_ChartSeries_XBindingPath(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.XBindingPath;
        }
        private void set_159_ChartSeries_XBindingPath(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.XBindingPath = (global::System.String)Value;
        }
        private object get_160_ChartSeries_EnableAnimation(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.EnableAnimation;
        }
        private void set_160_ChartSeries_EnableAnimation(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.EnableAnimation = (global::System.Boolean)Value;
        }
        private object get_161_ChartSeries_AnimationDuration(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.AnimationDuration;
        }
        private void set_161_ChartSeries_AnimationDuration(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.AnimationDuration = (global::System.TimeSpan)Value;
        }
        private object get_162_ChartSeries_Chart(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.Chart;
        }
        private object get_163_ChartSeries_ShowDataLabels(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            return that.ShowDataLabels;
        }
        private void set_163_ChartSeries_ShowDataLabels(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartSeries)instance;
            that.ShowDataLabels = (global::System.Boolean)Value;
        }
        private object get_164_ChartBase_Header(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.Header;
        }
        private void set_164_ChartBase_Header(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_165_SfCartesianChart_PaletteBrushes(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.PaletteBrushes;
        }
        private void set_165_SfCartesianChart_PaletteBrushes(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.PaletteBrushes = (global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Media.Brush>)Value;
        }
        private object get_166_SfCartesianChart_XAxes(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.XAxes;
        }
        private object get_167_ChartAxis_PlotOffsetStart(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.PlotOffsetStart;
        }
        private void set_167_ChartAxis_PlotOffsetStart(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.PlotOffsetStart = (global::System.Double)Value;
        }
        private object get_168_ChartAxis_PlotOffsetEnd(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.PlotOffsetEnd;
        }
        private void set_168_ChartAxis_PlotOffsetEnd(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.PlotOffsetEnd = (global::System.Double)Value;
        }
        private object get_169_ChartAxis_AxisLineOffset(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.AxisLineOffset;
        }
        private void set_169_ChartAxis_AxisLineOffset(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.AxisLineOffset = (global::System.Double)Value;
        }
        private object get_170_ChartAxis_LabelRotation(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.LabelRotation;
        }
        private void set_170_ChartAxis_LabelRotation(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.LabelRotation = (global::System.Double)Value;
        }
        private object get_171_ChartAxis_AxisLineStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.AxisLineStyle;
        }
        private void set_171_ChartAxis_AxisLineStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.AxisLineStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_172_ChartAxis_LabelStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.LabelStyle;
        }
        private void set_172_ChartAxis_LabelStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.LabelStyle = (global::Syncfusion.UI.Xaml.Charts.LabelStyle)Value;
        }
        private object get_173_ChartAxis_Header(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.Header;
        }
        private void set_173_ChartAxis_Header(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_174_ChartAxis_HeaderStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.HeaderStyle;
        }
        private void set_174_ChartAxis_HeaderStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.HeaderStyle = (global::Syncfusion.UI.Xaml.Charts.LabelStyle)Value;
        }
        private object get_175_ChartAxis_HeaderTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.HeaderTemplate;
        }
        private void set_175_ChartAxis_HeaderTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.HeaderTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_176_ChartAxis_IsInversed(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.IsInversed;
        }
        private void set_176_ChartAxis_IsInversed(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.IsInversed = (global::System.Boolean)Value;
        }
        private object get_177_ChartAxis_EdgeLabelsDrawingMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.EdgeLabelsDrawingMode;
        }
        private void set_177_ChartAxis_EdgeLabelsDrawingMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.EdgeLabelsDrawingMode = (global::Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode)Value;
        }
        private object get_178_ChartAxis_MajorGridLineStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.MajorGridLineStyle;
        }
        private void set_178_ChartAxis_MajorGridLineStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.MajorGridLineStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_179_ChartAxis_MajorTickStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.MajorTickStyle;
        }
        private void set_179_ChartAxis_MajorTickStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.MajorTickStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_180_ChartAxis_ZoomPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.ZoomPosition;
        }
        private void set_180_ChartAxis_ZoomPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.ZoomPosition = (global::System.Double)Value;
        }
        private object get_181_ChartAxis_ZoomFactor(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.ZoomFactor;
        }
        private void set_181_ChartAxis_ZoomFactor(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.ZoomFactor = (global::System.Double)Value;
        }
        private object get_182_ChartAxis_ShowMajorGridLines(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.ShowMajorGridLines;
        }
        private void set_182_ChartAxis_ShowMajorGridLines(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.ShowMajorGridLines = (global::System.Boolean)Value;
        }
        private object get_183_ChartAxis_EnableAutoIntervalOnZooming(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.EnableAutoIntervalOnZooming;
        }
        private void set_183_ChartAxis_EnableAutoIntervalOnZooming(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.EnableAutoIntervalOnZooming = (global::System.Boolean)Value;
        }
        private object get_184_ChartAxis_LabelsIntersectAction(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.LabelsIntersectAction;
        }
        private void set_184_ChartAxis_LabelsIntersectAction(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.LabelsIntersectAction = (global::Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction)Value;
        }
        private object get_185_ChartAxis_LabelExtent(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.LabelExtent;
        }
        private void set_185_ChartAxis_LabelExtent(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.LabelExtent = (global::System.Double)Value;
        }
        private object get_186_ChartAxis_OpposedPosition(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.OpposedPosition;
        }
        private void set_186_ChartAxis_OpposedPosition(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.OpposedPosition = (global::System.Boolean)Value;
        }
        private object get_187_ChartAxis_TickLineSize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.TickLineSize;
        }
        private void set_187_ChartAxis_TickLineSize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.TickLineSize = (global::System.Double)Value;
        }
        private object get_188_ChartAxis_ShowTrackballLabel(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.ShowTrackballLabel;
        }
        private void set_188_ChartAxis_ShowTrackballLabel(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.ShowTrackballLabel = (global::System.Boolean)Value;
        }
        private object get_189_ChartAxis_TrackballLabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.TrackballLabelTemplate;
        }
        private void set_189_ChartAxis_TrackballLabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.TrackballLabelTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_190_ChartAxis_CrosshairLabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.CrosshairLabelTemplate;
        }
        private void set_190_ChartAxis_CrosshairLabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.CrosshairLabelTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_191_ChartAxis_LabelTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.LabelTemplate;
        }
        private void set_191_ChartAxis_LabelTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.LabelTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_192_ChartAxis_AutoScrollingMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.AutoScrollingMode;
        }
        private void set_192_ChartAxis_AutoScrollingMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.AutoScrollingMode = (global::Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode)Value;
        }
        private object get_193_ChartAxis_AutoScrollingDelta(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            return that.AutoScrollingDelta;
        }
        private void set_193_ChartAxis_AutoScrollingDelta(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartAxis)instance;
            that.AutoScrollingDelta = (global::System.Double)Value;
        }
        private object get_194_SfCartesianChart_YAxes(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.YAxes;
        }
        private object get_195_RangeAxisBase_EdgeLabelsVisibilityMode(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            return that.EdgeLabelsVisibilityMode;
        }
        private void set_195_RangeAxisBase_EdgeLabelsVisibilityMode(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            that.EdgeLabelsVisibilityMode = (global::Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode)Value;
        }
        private object get_196_RangeAxisBase_MinorTicksPerInterval(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            return that.MinorTicksPerInterval;
        }
        private void set_196_RangeAxisBase_MinorTicksPerInterval(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            that.MinorTicksPerInterval = (global::System.Int32)Value;
        }
        private object get_197_RangeAxisBase_MinorTickLineSize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            return that.MinorTickLineSize;
        }
        private void set_197_RangeAxisBase_MinorTickLineSize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            that.MinorTickLineSize = (global::System.Double)Value;
        }
        private object get_198_RangeAxisBase_MinorGridLineStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            return that.MinorGridLineStyle;
        }
        private void set_198_RangeAxisBase_MinorGridLineStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            that.MinorGridLineStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_199_RangeAxisBase_MinorTickStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            return that.MinorTickStyle;
        }
        private void set_199_RangeAxisBase_MinorTickStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            that.MinorTickStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_200_RangeAxisBase_ShowMinorGridLines(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            return that.ShowMinorGridLines;
        }
        private void set_200_RangeAxisBase_ShowMinorGridLines(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.RangeAxisBase)instance;
            that.ShowMinorGridLines = (global::System.Boolean)Value;
        }
        private object get_201_SfCartesianChart_SelectionBehavior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.SelectionBehavior;
        }
        private void set_201_SfCartesianChart_SelectionBehavior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.SelectionBehavior = (global::Syncfusion.UI.Xaml.Charts.SeriesSelectionBehavior)Value;
        }
        private object get_202_SfCartesianChart_ZoomPanBehavior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.ZoomPanBehavior;
        }
        private void set_202_SfCartesianChart_ZoomPanBehavior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.ZoomPanBehavior = (global::Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior)Value;
        }
        private object get_203_SfCartesianChart_TrackballBehavior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.TrackballBehavior;
        }
        private void set_203_SfCartesianChart_TrackballBehavior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.TrackballBehavior = (global::Syncfusion.UI.Xaml.Charts.ChartTrackballBehavior)Value;
        }
        private object get_204_SfCartesianChart_CrosshairBehavior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.CrosshairBehavior;
        }
        private void set_204_SfCartesianChart_CrosshairBehavior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.CrosshairBehavior = (global::Syncfusion.UI.Xaml.Charts.ChartCrosshairBehavior)Value;
        }
        private object get_205_SfCartesianChart_PlotAreaBorderBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.PlotAreaBorderBrush;
        }
        private void set_205_SfCartesianChart_PlotAreaBorderBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.PlotAreaBorderBrush = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_206_SfCartesianChart_PlotAreaBorderThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.PlotAreaBorderThickness;
        }
        private void set_206_SfCartesianChart_PlotAreaBorderThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.PlotAreaBorderThickness = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_207_SfCartesianChart_PlotAreaBackground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.PlotAreaBackground;
        }
        private void set_207_SfCartesianChart_PlotAreaBackground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.PlotAreaBackground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_208_SfCartesianChart_IsTransposed(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.IsTransposed;
        }
        private void set_208_SfCartesianChart_IsTransposed(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.IsTransposed = (global::System.Boolean)Value;
        }
        private object get_209_SfCartesianChart_EnableSideBySideSeriesPlacement(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            return that.EnableSideBySideSeriesPlacement;
        }
        private void set_209_SfCartesianChart_EnableSideBySideSeriesPlacement(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SfCartesianChart)instance;
            that.EnableSideBySideSeriesPlacement = (global::System.Boolean)Value;
        }
        private object get_210_ChartBase_Legend(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.Legend;
        }
        private void set_210_ChartBase_Legend(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.Legend = (global::Syncfusion.UI.Xaml.Charts.ChartLegend)Value;
        }
        private object get_211_ChartBase_TooltipBehavior(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.TooltipBehavior;
        }
        private void set_211_ChartBase_TooltipBehavior(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.TooltipBehavior = (global::Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior)Value;
        }
        private object get_212_ChartBase_HorizontalHeaderAlignment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.HorizontalHeaderAlignment;
        }
        private void set_212_ChartBase_HorizontalHeaderAlignment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.HorizontalHeaderAlignment = (global::Microsoft.UI.Xaml.HorizontalAlignment)Value;
        }
        private object get_213_ChartBase_VerticalHeaderAlignment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            return that.VerticalHeaderAlignment;
        }
        private void set_213_ChartBase_VerticalHeaderAlignment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartBase)instance;
            that.VerticalHeaderAlignment = (global::Microsoft.UI.Xaml.VerticalAlignment)Value;
        }
        private object get_214_CategoryAxis_Interval(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CategoryAxis)instance;
            return that.Interval;
        }
        private void set_214_CategoryAxis_Interval(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CategoryAxis)instance;
            that.Interval = (global::System.Double)Value;
        }
        private object get_215_CategoryAxis_LabelPlacement(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CategoryAxis)instance;
            return that.LabelPlacement;
        }
        private void set_215_CategoryAxis_LabelPlacement(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CategoryAxis)instance;
            that.LabelPlacement = (global::Syncfusion.UI.Xaml.Charts.LabelPlacement)Value;
        }
        private object get_216_NumericalAxis_Interval(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            return that.Interval;
        }
        private void set_216_NumericalAxis_Interval(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            that.Interval = (global::System.Double)Value;
        }
        private object get_217_NumericalAxis_Minimum(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            return that.Minimum;
        }
        private void set_217_NumericalAxis_Minimum(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            that.Minimum = (global::System.Double)Value;
        }
        private object get_218_NumericalAxis_Maximum(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            return that.Maximum;
        }
        private void set_218_NumericalAxis_Maximum(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            that.Maximum = (global::System.Double)Value;
        }
        private object get_219_NumericalAxis_RangePadding(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            return that.RangePadding;
        }
        private void set_219_NumericalAxis_RangePadding(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            that.RangePadding = (global::Syncfusion.UI.Xaml.Charts.NumericalPadding)Value;
        }
        private object get_220_NumericalAxis_ActualMinimum(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            return that.ActualMinimum;
        }
        private object get_221_NumericalAxis_ActualMaximum(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.NumericalAxis)instance;
            return that.ActualMaximum;
        }
        private object get_222_XyDataSeries_YBindingPath(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.XyDataSeries)instance;
            return that.YBindingPath;
        }
        private void set_222_XyDataSeries_YBindingPath(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.XyDataSeries)instance;
            that.YBindingPath = (global::System.String)Value;
        }
        private object get_223_SplineSeries_CustomTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SplineSeries)instance;
            return that.CustomTemplate;
        }
        private void set_223_SplineSeries_CustomTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SplineSeries)instance;
            that.CustomTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_224_SplineSeries_Type(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SplineSeries)instance;
            return that.Type;
        }
        private void set_224_SplineSeries_Type(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SplineSeries)instance;
            that.Type = (global::Syncfusion.UI.Xaml.Charts.SplineType)Value;
        }
        private object get_225_SplineSeries_StrokeDashArray(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SplineSeries)instance;
            return that.StrokeDashArray;
        }
        private void set_225_SplineSeries_StrokeDashArray(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.SplineSeries)instance;
            that.StrokeDashArray = (global::Microsoft.UI.Xaml.Media.DoubleCollection)Value;
        }
        private object get_226_XyDataSeries_StrokeWidth(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.XyDataSeries)instance;
            return that.StrokeWidth;
        }
        private void set_226_XyDataSeries_StrokeWidth(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.XyDataSeries)instance;
            that.StrokeWidth = (global::System.Double)Value;
        }
        private object get_227_ChartDataLabelSettings_ContentTemplate(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            return that.ContentTemplate;
        }
        private void set_227_ChartDataLabelSettings_ContentTemplate(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            that.ContentTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_228_CartesianDataLabelSettings_BarLabelAlignment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings)instance;
            return that.BarLabelAlignment;
        }
        private void set_228_CartesianDataLabelSettings_BarLabelAlignment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings)instance;
            that.BarLabelAlignment = (global::Syncfusion.UI.Xaml.Charts.BarLabelAlignment)Value;
        }
        private object get_229_CartesianDataLabelSettings_Position(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings)instance;
            return that.Position;
        }
        private void set_229_CartesianDataLabelSettings_Position(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings)instance;
            that.Position = (global::Syncfusion.UI.Xaml.Charts.DataLabelPosition)Value;
        }
        private object get_230_ChartDataLabelSettings_Rotation(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            return that.Rotation;
        }
        private void set_230_ChartDataLabelSettings_Rotation(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            that.Rotation = (global::System.Double)Value;
        }
        private object get_231_ChartDataLabelSettings_Background(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            return that.Background;
        }
        private void set_231_ChartDataLabelSettings_Background(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            that.Background = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_232_ChartDataLabelSettings_BorderThickness(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            return that.BorderThickness;
        }
        private void set_232_ChartDataLabelSettings_BorderThickness(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            that.BorderThickness = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_233_ChartDataLabelSettings_BorderBrush(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            return that.BorderBrush;
        }
        private void set_233_ChartDataLabelSettings_BorderBrush(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            that.BorderBrush = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_234_ChartDataLabelSettings_Margin(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            return that.Margin;
        }
        private void set_234_ChartDataLabelSettings_Margin(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            that.Margin = (global::Microsoft.UI.Xaml.Thickness)Value;
        }
        private object get_235_ChartDataLabelSettings_FontStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            return that.FontStyle;
        }
        private void set_235_ChartDataLabelSettings_FontStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            that.FontStyle = (global::Windows.UI.Text.FontStyle)Value;
        }
        private object get_236_ChartDataLabelSettings_FontSize(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            return that.FontSize;
        }
        private void set_236_ChartDataLabelSettings_FontSize(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            that.FontSize = (global::System.Double)Value;
        }
        private object get_237_ChartDataLabelSettings_Foreground(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            return that.Foreground;
        }
        private void set_237_ChartDataLabelSettings_Foreground(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            that.Foreground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_238_ChartDataLabelSettings_UseSeriesPalette(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            return that.UseSeriesPalette;
        }
        private void set_238_ChartDataLabelSettings_UseSeriesPalette(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            that.UseSeriesPalette = (global::System.Boolean)Value;
        }
        private object get_239_ChartDataLabelSettings_HighlightOnSelection(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            return that.HighlightOnSelection;
        }
        private void set_239_ChartDataLabelSettings_HighlightOnSelection(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            that.HighlightOnSelection = (global::System.Boolean)Value;
        }
        private object get_240_ChartDataLabelSettings_HorizontalAlignment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            return that.HorizontalAlignment;
        }
        private void set_240_ChartDataLabelSettings_HorizontalAlignment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            that.HorizontalAlignment = (global::Microsoft.UI.Xaml.HorizontalAlignment)Value;
        }
        private object get_241_ChartDataLabelSettings_VerticalAlignment(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            return that.VerticalAlignment;
        }
        private void set_241_ChartDataLabelSettings_VerticalAlignment(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            that.VerticalAlignment = (global::Microsoft.UI.Xaml.VerticalAlignment)Value;
        }
        private object get_242_ChartDataLabelSettings_ConnectorHeight(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            return that.ConnectorHeight;
        }
        private void set_242_ChartDataLabelSettings_ConnectorHeight(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            that.ConnectorHeight = (global::System.Double)Value;
        }
        private object get_243_ChartDataLabelSettings_ConnectorRotation(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            return that.ConnectorRotation;
        }
        private void set_243_ChartDataLabelSettings_ConnectorRotation(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            that.ConnectorRotation = (global::System.Double)Value;
        }
        private object get_244_ChartDataLabelSettings_ConnectorLineStyle(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            return that.ConnectorLineStyle;
        }
        private void set_244_ChartDataLabelSettings_ConnectorLineStyle(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            that.ConnectorLineStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_245_ChartDataLabelSettings_ShowConnectorLine(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            return that.ShowConnectorLine;
        }
        private void set_245_ChartDataLabelSettings_ShowConnectorLine(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            that.ShowConnectorLine = (global::System.Boolean)Value;
        }
        private object get_246_ChartDataLabelSettings_FontFamily(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            return that.FontFamily;
        }
        private void set_246_ChartDataLabelSettings_FontFamily(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            that.FontFamily = (global::Microsoft.UI.Xaml.Media.FontFamily)Value;
        }
        private object get_247_ChartDataLabelSettings_Series(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            return that.Series;
        }
        private object get_248_ChartDataLabelSettings_Context(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            return that.Context;
        }
        private void set_248_ChartDataLabelSettings_Context(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            that.Context = (global::Syncfusion.UI.Xaml.Charts.LabelContext)Value;
        }
        private object get_249_ChartDataLabelSettings_Format(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            return that.Format;
        }
        private void set_249_ChartDataLabelSettings_Format(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings)instance;
            that.Format = (global::System.String)Value;
        }
        private object get_250_TreeViewNode_Children(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Children;
        }
        private object get_251_TreeViewNode_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Content;
        }
        private void set_251_TreeViewNode_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_252_TreeViewNode_Depth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Depth;
        }
        private object get_253_TreeViewNode_HasChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasChildren;
        }
        private object get_254_TreeViewNode_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_254_TreeViewNode_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_255_TreeViewNode_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.IsExpanded;
        }
        private void set_255_TreeViewNode_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_256_TreeViewNode_Parent(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Parent;
        }
        private object get_257_DoubleToObjectConverter_TrueValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            return that.TrueValue;
        }
        private void set_257_DoubleToObjectConverter_TrueValue(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            that.TrueValue = (global::System.Object)Value;
        }
        private object get_258_DoubleToObjectConverter_FalseValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            return that.FalseValue;
        }
        private void set_258_DoubleToObjectConverter_FalseValue(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            that.FalseValue = (global::System.Object)Value;
        }
        private object get_259_DoubleToObjectConverter_NullValue(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            return that.NullValue;
        }
        private void set_259_DoubleToObjectConverter_NullValue(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            that.NullValue = (global::System.Object)Value;
        }
        private object get_260_DoubleToObjectConverter_GreaterThan(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            return that.GreaterThan;
        }
        private void set_260_DoubleToObjectConverter_GreaterThan(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            that.GreaterThan = (global::System.Double)Value;
        }
        private object get_261_DoubleToObjectConverter_LessThan(object instance)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            return that.LessThan;
        }
        private void set_261_DoubleToObjectConverter_LessThan(object instance, object Value)
        {
            var that = (global::Syncfusion.UI.Xaml.Core.DoubleToObjectConverter)instance;
            that.LessThan = (global::System.Double)Value;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::MyShop.MyShop_XamlTypeInfo.XamlMember xamlMember = null;
            global::MyShop.MyShop_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Microsoft.UI.Xaml.Controls.XamlControlsResources.UseCompactResources":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.XamlControlsResources");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "UseCompactResources", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_XamlControlsResources_UseCompactResources;
                xamlMember.Setter = set_0_XamlControlsResources_UseCompactResources;
                break;
            case "Microsoft.UI.Xaml.Thickness.Left":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Thickness");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Left", "Double");
                xamlMember.Getter = get_1_Thickness_Left;
                xamlMember.Setter = set_1_Thickness_Left;
                break;
            case "Microsoft.UI.Xaml.Thickness.Top":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Thickness");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Top", "Double");
                xamlMember.Getter = get_2_Thickness_Top;
                xamlMember.Setter = set_2_Thickness_Top;
                break;
            case "Microsoft.UI.Xaml.Thickness.Right":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Thickness");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Right", "Double");
                xamlMember.Getter = get_3_Thickness_Right;
                xamlMember.Setter = set_3_Thickness_Right;
                break;
            case "Microsoft.UI.Xaml.Thickness.Bottom":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Thickness");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Bottom", "Double");
                xamlMember.Getter = get_4_Thickness_Bottom;
                xamlMember.Setter = set_4_Thickness_Bottom;
                break;
            case "Microsoft.UI.Xaml.Media.MicaBackdrop.Kind":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Media.MicaBackdrop");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Kind", "Microsoft.UI.Composition.SystemBackdrops.MicaKind");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_MicaBackdrop_Kind;
                xamlMember.Setter = set_5_MicaBackdrop_Kind;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.ItemsSource":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ItemsSource", "System.Collections.IEnumerable");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_DataGrid_ItemsSource;
                xamlMember.Setter = set_6_DataGrid_ItemsSource;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.AutoGenerateColumns":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "AutoGenerateColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_DataGrid_AutoGenerateColumns;
                xamlMember.Setter = set_7_DataGrid_AutoGenerateColumns;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.Columns":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Columns", "System.Collections.ObjectModel.ObservableCollection`1<CommunityToolkit.WinUI.UI.Controls.DataGridColumn>");
                xamlMember.Getter = get_8_DataGrid_Columns;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.ActualWidth":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ActualWidth", "Double");
                xamlMember.Getter = get_9_DataGridColumn_ActualWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.CanUserReorder":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "CanUserReorder", "Boolean");
                xamlMember.Getter = get_10_DataGridColumn_CanUserReorder;
                xamlMember.Setter = set_10_DataGridColumn_CanUserReorder;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.CanUserResize":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "CanUserResize", "Boolean");
                xamlMember.Getter = get_11_DataGridColumn_CanUserResize;
                xamlMember.Setter = set_11_DataGridColumn_CanUserResize;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.CanUserSort":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "CanUserSort", "Boolean");
                xamlMember.Getter = get_12_DataGridColumn_CanUserSort;
                xamlMember.Setter = set_12_DataGridColumn_CanUserSort;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.CellStyle":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "CellStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.Getter = get_13_DataGridColumn_CellStyle;
                xamlMember.Setter = set_13_DataGridColumn_CellStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.ClipboardContentBinding":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ClipboardContentBinding", "Microsoft.UI.Xaml.Data.Binding");
                xamlMember.Getter = get_14_DataGridColumn_ClipboardContentBinding;
                xamlMember.Setter = set_14_DataGridColumn_ClipboardContentBinding;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.DisplayIndex":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "DisplayIndex", "Int32");
                xamlMember.Getter = get_15_DataGridColumn_DisplayIndex;
                xamlMember.Setter = set_15_DataGridColumn_DisplayIndex;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.DragIndicatorStyle":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "DragIndicatorStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.Getter = get_16_DataGridColumn_DragIndicatorStyle;
                xamlMember.Setter = set_16_DataGridColumn_DragIndicatorStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.HeaderStyle":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "HeaderStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.Getter = get_17_DataGridColumn_HeaderStyle;
                xamlMember.Setter = set_17_DataGridColumn_HeaderStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.Header":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.Getter = get_18_DataGridColumn_Header;
                xamlMember.Setter = set_18_DataGridColumn_Header;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.IsAutoGenerated":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "IsAutoGenerated", "Boolean");
                xamlMember.Getter = get_19_DataGridColumn_IsAutoGenerated;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.IsFrozen":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "IsFrozen", "Boolean");
                xamlMember.Getter = get_20_DataGridColumn_IsFrozen;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.IsReadOnly":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "IsReadOnly", "Boolean");
                xamlMember.Getter = get_21_DataGridColumn_IsReadOnly;
                xamlMember.Setter = set_21_DataGridColumn_IsReadOnly;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.MaxWidth":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "MaxWidth", "Double");
                xamlMember.Getter = get_22_DataGridColumn_MaxWidth;
                xamlMember.Setter = set_22_DataGridColumn_MaxWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.MinWidth":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "MinWidth", "Double");
                xamlMember.Getter = get_23_DataGridColumn_MinWidth;
                xamlMember.Setter = set_23_DataGridColumn_MinWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.SortDirection":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "SortDirection", "System.Nullable`1<CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection>");
                xamlMember.Getter = get_24_DataGridColumn_SortDirection;
                xamlMember.Setter = set_24_DataGridColumn_SortDirection;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.Tag":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Tag", "Object");
                xamlMember.Getter = get_25_DataGridColumn_Tag;
                xamlMember.Setter = set_25_DataGridColumn_Tag;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.Visibility":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Visibility", "Microsoft.UI.Xaml.Visibility");
                xamlMember.Getter = get_26_DataGridColumn_Visibility;
                xamlMember.Setter = set_26_DataGridColumn_Visibility;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.Width":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Width", "CommunityToolkit.WinUI.UI.Controls.DataGridLength");
                xamlMember.Getter = get_27_DataGridColumn_Width;
                xamlMember.Setter = set_27_DataGridColumn_Width;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.AlternatingRowBackground":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "AlternatingRowBackground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_28_DataGrid_AlternatingRowBackground;
                xamlMember.Setter = set_28_DataGrid_AlternatingRowBackground;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.AlternatingRowForeground":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "AlternatingRowForeground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_DataGrid_AlternatingRowForeground;
                xamlMember.Setter = set_29_DataGrid_AlternatingRowForeground;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.AreRowDetailsFrozen":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "AreRowDetailsFrozen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_DataGrid_AreRowDetailsFrozen;
                xamlMember.Setter = set_30_DataGrid_AreRowDetailsFrozen;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.AreRowGroupHeadersFrozen":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "AreRowGroupHeadersFrozen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_DataGrid_AreRowGroupHeadersFrozen;
                xamlMember.Setter = set_31_DataGrid_AreRowGroupHeadersFrozen;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.CanUserReorderColumns":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "CanUserReorderColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_DataGrid_CanUserReorderColumns;
                xamlMember.Setter = set_32_DataGrid_CanUserReorderColumns;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.CanUserResizeColumns":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "CanUserResizeColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_DataGrid_CanUserResizeColumns;
                xamlMember.Setter = set_33_DataGrid_CanUserResizeColumns;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.CanUserSortColumns":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "CanUserSortColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_DataGrid_CanUserSortColumns;
                xamlMember.Setter = set_34_DataGrid_CanUserSortColumns;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.CellStyle":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "CellStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_DataGrid_CellStyle;
                xamlMember.Setter = set_35_DataGrid_CellStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.ClipboardCopyMode":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ClipboardCopyMode", "CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_DataGrid_ClipboardCopyMode;
                xamlMember.Setter = set_36_DataGrid_ClipboardCopyMode;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.ColumnHeaderHeight":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ColumnHeaderHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_DataGrid_ColumnHeaderHeight;
                xamlMember.Setter = set_37_DataGrid_ColumnHeaderHeight;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.ColumnHeaderStyle":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ColumnHeaderStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_38_DataGrid_ColumnHeaderStyle;
                xamlMember.Setter = set_38_DataGrid_ColumnHeaderStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.ColumnWidth":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ColumnWidth", "CommunityToolkit.WinUI.UI.Controls.DataGridLength");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_39_DataGrid_ColumnWidth;
                xamlMember.Setter = set_39_DataGrid_ColumnWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.DataFetchSize":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "DataFetchSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_40_DataGrid_DataFetchSize;
                xamlMember.Setter = set_40_DataGrid_DataFetchSize;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.DragIndicatorStyle":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "DragIndicatorStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_41_DataGrid_DragIndicatorStyle;
                xamlMember.Setter = set_41_DataGrid_DragIndicatorStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.DropLocationIndicatorStyle":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "DropLocationIndicatorStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_42_DataGrid_DropLocationIndicatorStyle;
                xamlMember.Setter = set_42_DataGrid_DropLocationIndicatorStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.FrozenColumnCount":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "FrozenColumnCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_43_DataGrid_FrozenColumnCount;
                xamlMember.Setter = set_43_DataGrid_FrozenColumnCount;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.GridLinesVisibility":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "GridLinesVisibility", "CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_44_DataGrid_GridLinesVisibility;
                xamlMember.Setter = set_44_DataGrid_GridLinesVisibility;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.HeadersVisibility":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "HeadersVisibility", "CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_45_DataGrid_HeadersVisibility;
                xamlMember.Setter = set_45_DataGrid_HeadersVisibility;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.HorizontalGridLinesBrush":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "HorizontalGridLinesBrush", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_46_DataGrid_HorizontalGridLinesBrush;
                xamlMember.Setter = set_46_DataGrid_HorizontalGridLinesBrush;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.HorizontalScrollBarVisibility":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "HorizontalScrollBarVisibility", "Microsoft.UI.Xaml.Controls.ScrollBarVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_47_DataGrid_HorizontalScrollBarVisibility;
                xamlMember.Setter = set_47_DataGrid_HorizontalScrollBarVisibility;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.IsReadOnly":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "IsReadOnly", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_48_DataGrid_IsReadOnly;
                xamlMember.Setter = set_48_DataGrid_IsReadOnly;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.IsValid":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "IsValid", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_49_DataGrid_IsValid;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.IncrementalLoadingThreshold":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "IncrementalLoadingThreshold", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_50_DataGrid_IncrementalLoadingThreshold;
                xamlMember.Setter = set_50_DataGrid_IncrementalLoadingThreshold;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.IncrementalLoadingTrigger":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "IncrementalLoadingTrigger", "Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_51_DataGrid_IncrementalLoadingTrigger;
                xamlMember.Setter = set_51_DataGrid_IncrementalLoadingTrigger;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.MaxColumnWidth":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "MaxColumnWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_52_DataGrid_MaxColumnWidth;
                xamlMember.Setter = set_52_DataGrid_MaxColumnWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.MinColumnWidth":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "MinColumnWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_53_DataGrid_MinColumnWidth;
                xamlMember.Setter = set_53_DataGrid_MinColumnWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowBackground":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "RowBackground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_54_DataGrid_RowBackground;
                xamlMember.Setter = set_54_DataGrid_RowBackground;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowDetailsTemplate":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "RowDetailsTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_55_DataGrid_RowDetailsTemplate;
                xamlMember.Setter = set_55_DataGrid_RowDetailsTemplate;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowDetailsVisibilityMode":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "RowDetailsVisibilityMode", "CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_56_DataGrid_RowDetailsVisibilityMode;
                xamlMember.Setter = set_56_DataGrid_RowDetailsVisibilityMode;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowForeground":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "RowForeground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_57_DataGrid_RowForeground;
                xamlMember.Setter = set_57_DataGrid_RowForeground;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowHeight":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "RowHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_58_DataGrid_RowHeight;
                xamlMember.Setter = set_58_DataGrid_RowHeight;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowHeaderWidth":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "RowHeaderWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_59_DataGrid_RowHeaderWidth;
                xamlMember.Setter = set_59_DataGrid_RowHeaderWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowHeaderStyle":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "RowHeaderStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_60_DataGrid_RowHeaderStyle;
                xamlMember.Setter = set_60_DataGrid_RowHeaderStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowStyle":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "RowStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_61_DataGrid_RowStyle;
                xamlMember.Setter = set_61_DataGrid_RowStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.SelectionMode":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "SelectionMode", "CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_62_DataGrid_SelectionMode;
                xamlMember.Setter = set_62_DataGrid_SelectionMode;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.SelectedIndex":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "SelectedIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_63_DataGrid_SelectedIndex;
                xamlMember.Setter = set_63_DataGrid_SelectedIndex;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.SelectedItem":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_64_DataGrid_SelectedItem;
                xamlMember.Setter = set_64_DataGrid_SelectedItem;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.VerticalGridLinesBrush":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "VerticalGridLinesBrush", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_65_DataGrid_VerticalGridLinesBrush;
                xamlMember.Setter = set_65_DataGrid_VerticalGridLinesBrush;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.VerticalScrollBarVisibility":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "VerticalScrollBarVisibility", "Microsoft.UI.Xaml.Controls.ScrollBarVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_66_DataGrid_VerticalScrollBarVisibility;
                xamlMember.Setter = set_66_DataGrid_VerticalScrollBarVisibility;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.CurrentColumn":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "CurrentColumn", "CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember.Getter = get_67_DataGrid_CurrentColumn;
                xamlMember.Setter = set_67_DataGrid_CurrentColumn;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowGroupHeaderPropertyNameAlternative":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "RowGroupHeaderPropertyNameAlternative", "String");
                xamlMember.Getter = get_68_DataGrid_RowGroupHeaderPropertyNameAlternative;
                xamlMember.Setter = set_68_DataGrid_RowGroupHeaderPropertyNameAlternative;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowGroupHeaderStyles":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "RowGroupHeaderStyles", "System.Collections.ObjectModel.ObservableCollection`1<Microsoft.UI.Xaml.Style>");
                xamlMember.Getter = get_69_DataGrid_RowGroupHeaderStyles;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.SelectedItems":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "SelectedItems", "System.Collections.IList");
                xamlMember.Getter = get_70_DataGrid_SelectedItems;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn.Binding":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Binding", "Microsoft.UI.Xaml.Data.Binding");
                xamlMember.Getter = get_71_DataGridBoundColumn_Binding;
                xamlMember.Setter = set_71_DataGridBoundColumn_Binding;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn.FontWeight":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "FontWeight", "Windows.UI.Text.FontWeight");
                xamlMember.Getter = get_72_DataGridTextColumn_FontWeight;
                xamlMember.Setter = set_72_DataGridTextColumn_FontWeight;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn.FontFamily":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "FontFamily", "Microsoft.UI.Xaml.Media.FontFamily");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_73_DataGridTextColumn_FontFamily;
                xamlMember.Setter = set_73_DataGridTextColumn_FontFamily;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn.FontSize":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "FontSize", "Double");
                xamlMember.Getter = get_74_DataGridTextColumn_FontSize;
                xamlMember.Setter = set_74_DataGridTextColumn_FontSize;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn.FontStyle":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "FontStyle", "Windows.UI.Text.FontStyle");
                xamlMember.Getter = get_75_DataGridTextColumn_FontStyle;
                xamlMember.Setter = set_75_DataGridTextColumn_FontStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn.Foreground":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridTextColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Foreground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.Getter = get_76_DataGridTextColumn_Foreground;
                xamlMember.Setter = set_76_DataGridTextColumn_Foreground;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn.ClipboardContentBinding":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ClipboardContentBinding", "Microsoft.UI.Xaml.Data.Binding");
                xamlMember.Getter = get_77_DataGridBoundColumn_ClipboardContentBinding;
                xamlMember.Setter = set_77_DataGridBoundColumn_ClipboardContentBinding;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn.EditingElementStyle":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "EditingElementStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.Getter = get_78_DataGridBoundColumn_EditingElementStyle;
                xamlMember.Setter = set_78_DataGridBoundColumn_EditingElementStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn.ElementStyle":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridBoundColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ElementStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.Getter = get_79_DataGridBoundColumn_ElementStyle;
                xamlMember.Setter = set_79_DataGridBoundColumn_ElementStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridTemplateColumn.CellTemplate":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridTemplateColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "CellTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.Getter = get_80_DataGridTemplateColumn_CellTemplate;
                xamlMember.Setter = set_80_DataGridTemplateColumn_CellTemplate;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridTemplateColumn.CellEditingTemplate":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridTemplateColumn");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "CellEditingTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.Getter = get_81_DataGridTemplateColumn_CellEditingTemplate;
                xamlMember.Setter = set_81_DataGridTemplateColumn_CellEditingTemplate;
                break;
            case "MyShop.View.DashboardPage.DashboardItems":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MyShop.View.DashboardPage");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "DashboardItems", "System.Collections.ObjectModel.ObservableCollection`1<MyShop.Model.DashboardItem>");
                xamlMember.Getter = get_82_DashboardPage_DashboardItems;
                xamlMember.SetIsReadOnly();
                break;
            case "MyShop.Model.DashboardItem.Id":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MyShop.Model.DashboardItem");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Id", "Int32");
                xamlMember.Getter = get_83_DashboardItem_Id;
                xamlMember.Setter = set_83_DashboardItem_Id;
                break;
            case "MyShop.Model.DashboardItem.OrderId":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MyShop.Model.DashboardItem");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "OrderId", "Int32");
                xamlMember.Getter = get_84_DashboardItem_OrderId;
                xamlMember.Setter = set_84_DashboardItem_OrderId;
                break;
            case "MyShop.Model.DashboardItem.Date":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MyShop.Model.DashboardItem");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Date", "System.DateTime");
                xamlMember.Getter = get_85_DashboardItem_Date;
                xamlMember.Setter = set_85_DashboardItem_Date;
                break;
            case "MyShop.Model.DashboardItem.Name":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MyShop.Model.DashboardItem");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_86_DashboardItem_Name;
                xamlMember.Setter = set_86_DashboardItem_Name;
                break;
            case "MyShop.Model.DashboardItem.Status":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MyShop.Model.DashboardItem");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Status", "String");
                xamlMember.Getter = get_87_DashboardItem_Status;
                xamlMember.Setter = set_87_DashboardItem_Status;
                break;
            case "MyShop.Model.DashboardItem.Amount":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MyShop.Model.DashboardItem");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Amount", "Double");
                xamlMember.Getter = get_88_DashboardItem_Amount;
                xamlMember.Setter = set_88_DashboardItem_Amount;
                break;
            case "MyShop.View.SettingsPage.ViewModel":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MyShop.View.SettingsPage");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ViewModel", "MyShop.ViewModel.SettingsViewModel");
                xamlMember.Getter = get_89_SettingsPage_ViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.OpenPaneLength":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "OpenPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_90_NavigationView_OpenPaneLength;
                xamlMember.Setter = set_90_NavigationView_OpenPaneLength;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsBackButtonVisible":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "IsBackButtonVisible", "Microsoft.UI.Xaml.Controls.NavigationViewBackButtonVisible");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_91_NavigationView_IsBackButtonVisible;
                xamlMember.Setter = set_91_NavigationView_IsBackButtonVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsBackEnabled":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "IsBackEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_92_NavigationView_IsBackEnabled;
                xamlMember.Setter = set_92_NavigationView_IsBackEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItems":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "MenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_93_NavigationView_MenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneFooter":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "PaneFooter", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_94_NavigationView_PaneFooter;
                xamlMember.Setter = set_94_NavigationView_PaneFooter;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.AlwaysShowHeader":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "AlwaysShowHeader", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_95_NavigationView_AlwaysShowHeader;
                xamlMember.Setter = set_95_NavigationView_AlwaysShowHeader;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.AutoSuggestBox":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "AutoSuggestBox", "Microsoft.UI.Xaml.Controls.AutoSuggestBox");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_96_NavigationView_AutoSuggestBox;
                xamlMember.Setter = set_96_NavigationView_AutoSuggestBox;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.CompactModeThresholdWidth":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "CompactModeThresholdWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_97_NavigationView_CompactModeThresholdWidth;
                xamlMember.Setter = set_97_NavigationView_CompactModeThresholdWidth;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.CompactPaneLength":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "CompactPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_98_NavigationView_CompactPaneLength;
                xamlMember.Setter = set_98_NavigationView_CompactPaneLength;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ContentOverlay":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ContentOverlay", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_99_NavigationView_ContentOverlay;
                xamlMember.Setter = set_99_NavigationView_ContentOverlay;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.DisplayMode":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "DisplayMode", "Microsoft.UI.Xaml.Controls.NavigationViewDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_100_NavigationView_DisplayMode;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ExpandedModeThresholdWidth":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ExpandedModeThresholdWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_101_NavigationView_ExpandedModeThresholdWidth;
                xamlMember.Setter = set_101_NavigationView_ExpandedModeThresholdWidth;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.FooterMenuItems":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "FooterMenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_102_NavigationView_FooterMenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.FooterMenuItemsSource":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "FooterMenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_103_NavigationView_FooterMenuItemsSource;
                xamlMember.Setter = set_103_NavigationView_FooterMenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.Header":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_104_NavigationView_Header;
                xamlMember.Setter = set_104_NavigationView_Header;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.HeaderTemplate":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_105_NavigationView_HeaderTemplate;
                xamlMember.Setter = set_105_NavigationView_HeaderTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneOpen":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "IsPaneOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_106_NavigationView_IsPaneOpen;
                xamlMember.Setter = set_106_NavigationView_IsPaneOpen;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneToggleButtonVisible":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "IsPaneToggleButtonVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_107_NavigationView_IsPaneToggleButtonVisible;
                xamlMember.Setter = set_107_NavigationView_IsPaneToggleButtonVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsPaneVisible":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "IsPaneVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_108_NavigationView_IsPaneVisible;
                xamlMember.Setter = set_108_NavigationView_IsPaneVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsSettingsVisible":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "IsSettingsVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_109_NavigationView_IsSettingsVisible;
                xamlMember.Setter = set_109_NavigationView_IsSettingsVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.IsTitleBarAutoPaddingEnabled":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "IsTitleBarAutoPaddingEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_110_NavigationView_IsTitleBarAutoPaddingEnabled;
                xamlMember.Setter = set_110_NavigationView_IsTitleBarAutoPaddingEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemContainerStyle":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "MenuItemContainerStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_111_NavigationView_MenuItemContainerStyle;
                xamlMember.Setter = set_111_NavigationView_MenuItemContainerStyle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemContainerStyleSelector":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "MenuItemContainerStyleSelector", "Microsoft.UI.Xaml.Controls.StyleSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_112_NavigationView_MenuItemContainerStyleSelector;
                xamlMember.Setter = set_112_NavigationView_MenuItemContainerStyleSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemTemplate":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "MenuItemTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_113_NavigationView_MenuItemTemplate;
                xamlMember.Setter = set_113_NavigationView_MenuItemTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemTemplateSelector":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "MenuItemTemplateSelector", "Microsoft.UI.Xaml.Controls.DataTemplateSelector");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_114_NavigationView_MenuItemTemplateSelector;
                xamlMember.Setter = set_114_NavigationView_MenuItemTemplateSelector;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.MenuItemsSource":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "MenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_115_NavigationView_MenuItemsSource;
                xamlMember.Setter = set_115_NavigationView_MenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.OverflowLabelMode":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "OverflowLabelMode", "Microsoft.UI.Xaml.Controls.NavigationViewOverflowLabelMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_116_NavigationView_OverflowLabelMode;
                xamlMember.Setter = set_116_NavigationView_OverflowLabelMode;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneCustomContent":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "PaneCustomContent", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_117_NavigationView_PaneCustomContent;
                xamlMember.Setter = set_117_NavigationView_PaneCustomContent;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneDisplayMode":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "PaneDisplayMode", "Microsoft.UI.Xaml.Controls.NavigationViewPaneDisplayMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_118_NavigationView_PaneDisplayMode;
                xamlMember.Setter = set_118_NavigationView_PaneDisplayMode;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneHeader":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "PaneHeader", "Microsoft.UI.Xaml.UIElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_119_NavigationView_PaneHeader;
                xamlMember.Setter = set_119_NavigationView_PaneHeader;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneTitle":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "PaneTitle", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_120_NavigationView_PaneTitle;
                xamlMember.Setter = set_120_NavigationView_PaneTitle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.PaneToggleButtonStyle":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "PaneToggleButtonStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_121_NavigationView_PaneToggleButtonStyle;
                xamlMember.Setter = set_121_NavigationView_PaneToggleButtonStyle;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SelectedItem":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_122_NavigationView_SelectedItem;
                xamlMember.Setter = set_122_NavigationView_SelectedItem;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SelectionFollowsFocus":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "SelectionFollowsFocus", "Microsoft.UI.Xaml.Controls.NavigationViewSelectionFollowsFocus");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_123_NavigationView_SelectionFollowsFocus;
                xamlMember.Setter = set_123_NavigationView_SelectionFollowsFocus;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.SettingsItem":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "SettingsItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_124_NavigationView_SettingsItem;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.ShoulderNavigationEnabled":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ShoulderNavigationEnabled", "Microsoft.UI.Xaml.Controls.NavigationViewShoulderNavigationEnabled");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_125_NavigationView_ShoulderNavigationEnabled;
                xamlMember.Setter = set_125_NavigationView_ShoulderNavigationEnabled;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationView.TemplateSettings":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationView");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.NavigationViewTemplateSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_126_NavigationView_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.CornerRadius.TopLeft":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.CornerRadius");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "TopLeft", "Double");
                xamlMember.Getter = get_127_CornerRadius_TopLeft;
                xamlMember.Setter = set_127_CornerRadius_TopLeft;
                break;
            case "Microsoft.UI.Xaml.CornerRadius.TopRight":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.CornerRadius");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "TopRight", "Double");
                xamlMember.Getter = get_128_CornerRadius_TopRight;
                xamlMember.Setter = set_128_CornerRadius_TopRight;
                break;
            case "Microsoft.UI.Xaml.CornerRadius.BottomRight":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.CornerRadius");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "BottomRight", "Double");
                xamlMember.Getter = get_129_CornerRadius_BottomRight;
                xamlMember.Setter = set_129_CornerRadius_BottomRight;
                break;
            case "Microsoft.UI.Xaml.CornerRadius.BottomLeft":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.CornerRadius");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "BottomLeft", "Double");
                xamlMember.Getter = get_130_CornerRadius_BottomLeft;
                xamlMember.Setter = set_130_CornerRadius_BottomLeft;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.Icon":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Icon", "Microsoft.UI.Xaml.Controls.IconElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_131_NavigationViewItem_Icon;
                xamlMember.Setter = set_131_NavigationViewItem_Icon;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.CompactPaneLength":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "CompactPaneLength", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_132_NavigationViewItem_CompactPaneLength;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.HasUnrealizedChildren":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_133_NavigationViewItem_HasUnrealizedChildren;
                xamlMember.Setter = set_133_NavigationViewItem_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.InfoBadge":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "InfoBadge", "Microsoft.UI.Xaml.Controls.InfoBadge");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_134_NavigationViewItem_InfoBadge;
                xamlMember.Setter = set_134_NavigationViewItem_InfoBadge;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.IsChildSelected":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "IsChildSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_135_NavigationViewItem_IsChildSelected;
                xamlMember.Setter = set_135_NavigationViewItem_IsChildSelected;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.IsExpanded":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_136_NavigationViewItem_IsExpanded;
                xamlMember.Setter = set_136_NavigationViewItem_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.MenuItems":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "MenuItems", "System.Collections.Generic.IList`1<Object>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_137_NavigationViewItem_MenuItems;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.MenuItemsSource":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "MenuItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_138_NavigationViewItem_MenuItemsSource;
                xamlMember.Setter = set_138_NavigationViewItem_MenuItemsSource;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItem.SelectsOnInvoked":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItem");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "SelectsOnInvoked", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_139_NavigationViewItem_SelectsOnInvoked;
                xamlMember.Setter = set_139_NavigationViewItem_SelectsOnInvoked;
                break;
            case "Microsoft.UI.Xaml.Controls.NavigationViewItemBase.IsSelected":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.NavigationViewItemBase");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "IsSelected", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_140_NavigationViewItemBase_IsSelected;
                xamlMember.Setter = set_140_NavigationViewItemBase_IsSelected;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.Series":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Series", "Syncfusion.UI.Xaml.Charts.CartesianSeriesCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_141_SfCartesianChart_Series;
                xamlMember.Setter = set_141_SfCartesianChart_Series;
                break;
            case "Syncfusion.UI.Xaml.Charts.CartesianSeries.DataLabelSettings":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CartesianSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "DataLabelSettings", "Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_142_CartesianSeries_DataLabelSettings;
                xamlMember.Setter = set_142_CartesianSeries_DataLabelSettings;
                break;
            case "Syncfusion.UI.Xaml.Charts.CartesianSeries.XAxisName":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CartesianSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "XAxisName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_143_CartesianSeries_XAxisName;
                xamlMember.Setter = set_143_CartesianSeries_XAxisName;
                break;
            case "Syncfusion.UI.Xaml.Charts.CartesianSeries.YAxisName":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CartesianSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "YAxisName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_144_CartesianSeries_YAxisName;
                xamlMember.Setter = set_144_CartesianSeries_YAxisName;
                break;
            case "Syncfusion.UI.Xaml.Charts.CartesianSeries.ShowTrackballLabel":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CartesianSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ShowTrackballLabel", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_145_CartesianSeries_ShowTrackballLabel;
                xamlMember.Setter = set_145_CartesianSeries_ShowTrackballLabel;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.SelectionBehavior":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "SelectionBehavior", "Syncfusion.UI.Xaml.Charts.DataPointSelectionBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_146_ChartSeries_SelectionBehavior;
                xamlMember.Setter = set_146_ChartSeries_SelectionBehavior;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.PaletteBrushes":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "PaletteBrushes", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Media.Brush>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_147_ChartSeries_PaletteBrushes;
                xamlMember.Setter = set_147_ChartSeries_PaletteBrushes;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.TooltipTemplate":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "TooltipTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_148_ChartSeries_TooltipTemplate;
                xamlMember.Setter = set_148_ChartSeries_TooltipTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.EnableTooltip":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "EnableTooltip", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_149_ChartSeries_EnableTooltip;
                xamlMember.Setter = set_149_ChartSeries_EnableTooltip;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.ListenPropertyChange":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ListenPropertyChange", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_150_ChartSeries_ListenPropertyChange;
                xamlMember.Setter = set_150_ChartSeries_ListenPropertyChange;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.IsSeriesVisible":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "IsSeriesVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_151_ChartSeries_IsSeriesVisible;
                xamlMember.Setter = set_151_ChartSeries_IsSeriesVisible;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.ItemsSource":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ItemsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_152_ChartSeries_ItemsSource;
                xamlMember.Setter = set_152_ChartSeries_ItemsSource;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.TrackballLabelTemplate":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "TrackballLabelTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_153_ChartSeries_TrackballLabelTemplate;
                xamlMember.Setter = set_153_ChartSeries_TrackballLabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.Fill":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Fill", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_154_ChartSeries_Fill;
                xamlMember.Setter = set_154_ChartSeries_Fill;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.Label":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Label", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_155_ChartSeries_Label;
                xamlMember.Setter = set_155_ChartSeries_Label;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.LegendIcon":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "LegendIcon", "Syncfusion.UI.Xaml.Charts.ChartLegendIcon");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_156_ChartSeries_LegendIcon;
                xamlMember.Setter = set_156_ChartSeries_LegendIcon;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.LegendIconTemplate":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "LegendIconTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_157_ChartSeries_LegendIconTemplate;
                xamlMember.Setter = set_157_ChartSeries_LegendIconTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.IsVisibleOnLegend":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "IsVisibleOnLegend", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_158_ChartSeries_IsVisibleOnLegend;
                xamlMember.Setter = set_158_ChartSeries_IsVisibleOnLegend;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.XBindingPath":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "XBindingPath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_159_ChartSeries_XBindingPath;
                xamlMember.Setter = set_159_ChartSeries_XBindingPath;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.EnableAnimation":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "EnableAnimation", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_160_ChartSeries_EnableAnimation;
                xamlMember.Setter = set_160_ChartSeries_EnableAnimation;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.AnimationDuration":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "AnimationDuration", "TimeSpan");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_161_ChartSeries_AnimationDuration;
                xamlMember.Setter = set_161_ChartSeries_AnimationDuration;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.Chart":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Chart", "Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember.Getter = get_162_ChartSeries_Chart;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartSeries.ShowDataLabels":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ShowDataLabels", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_163_ChartSeries_ShowDataLabels;
                xamlMember.Setter = set_163_ChartSeries_ShowDataLabels;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.Header":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_164_ChartBase_Header;
                xamlMember.Setter = set_164_ChartBase_Header;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.PaletteBrushes":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "PaletteBrushes", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Media.Brush>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_165_SfCartesianChart_PaletteBrushes;
                xamlMember.Setter = set_165_SfCartesianChart_PaletteBrushes;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.XAxes":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "XAxes", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.ChartAxis>");
                xamlMember.Getter = get_166_SfCartesianChart_XAxes;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffsetStart":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "PlotOffsetStart", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_167_ChartAxis_PlotOffsetStart;
                xamlMember.Setter = set_167_ChartAxis_PlotOffsetStart;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.PlotOffsetEnd":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "PlotOffsetEnd", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_168_ChartAxis_PlotOffsetEnd;
                xamlMember.Setter = set_168_ChartAxis_PlotOffsetEnd;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.AxisLineOffset":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "AxisLineOffset", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_169_ChartAxis_AxisLineOffset;
                xamlMember.Setter = set_169_ChartAxis_AxisLineOffset;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.LabelRotation":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "LabelRotation", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_170_ChartAxis_LabelRotation;
                xamlMember.Setter = set_170_ChartAxis_LabelRotation;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.AxisLineStyle":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "AxisLineStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_171_ChartAxis_AxisLineStyle;
                xamlMember.Setter = set_171_ChartAxis_AxisLineStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.LabelStyle":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "LabelStyle", "Syncfusion.UI.Xaml.Charts.LabelStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_172_ChartAxis_LabelStyle;
                xamlMember.Setter = set_172_ChartAxis_LabelStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.Header":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_173_ChartAxis_Header;
                xamlMember.Setter = set_173_ChartAxis_Header;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.HeaderStyle":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "HeaderStyle", "Syncfusion.UI.Xaml.Charts.LabelStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_174_ChartAxis_HeaderStyle;
                xamlMember.Setter = set_174_ChartAxis_HeaderStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.HeaderTemplate":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "HeaderTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_175_ChartAxis_HeaderTemplate;
                xamlMember.Setter = set_175_ChartAxis_HeaderTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.IsInversed":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "IsInversed", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_176_ChartAxis_IsInversed;
                xamlMember.Setter = set_176_ChartAxis_IsInversed;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.EdgeLabelsDrawingMode":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "EdgeLabelsDrawingMode", "Syncfusion.UI.Xaml.Charts.EdgeLabelsDrawingMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_177_ChartAxis_EdgeLabelsDrawingMode;
                xamlMember.Setter = set_177_ChartAxis_EdgeLabelsDrawingMode;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.MajorGridLineStyle":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "MajorGridLineStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_178_ChartAxis_MajorGridLineStyle;
                xamlMember.Setter = set_178_ChartAxis_MajorGridLineStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.MajorTickStyle":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "MajorTickStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_179_ChartAxis_MajorTickStyle;
                xamlMember.Setter = set_179_ChartAxis_MajorTickStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.ZoomPosition":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ZoomPosition", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_180_ChartAxis_ZoomPosition;
                xamlMember.Setter = set_180_ChartAxis_ZoomPosition;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.ZoomFactor":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ZoomFactor", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_181_ChartAxis_ZoomFactor;
                xamlMember.Setter = set_181_ChartAxis_ZoomFactor;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.ShowMajorGridLines":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ShowMajorGridLines", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_182_ChartAxis_ShowMajorGridLines;
                xamlMember.Setter = set_182_ChartAxis_ShowMajorGridLines;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.EnableAutoIntervalOnZooming":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "EnableAutoIntervalOnZooming", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_183_ChartAxis_EnableAutoIntervalOnZooming;
                xamlMember.Setter = set_183_ChartAxis_EnableAutoIntervalOnZooming;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.LabelsIntersectAction":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "LabelsIntersectAction", "Syncfusion.UI.Xaml.Charts.AxisLabelsIntersectAction");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_184_ChartAxis_LabelsIntersectAction;
                xamlMember.Setter = set_184_ChartAxis_LabelsIntersectAction;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.LabelExtent":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "LabelExtent", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_185_ChartAxis_LabelExtent;
                xamlMember.Setter = set_185_ChartAxis_LabelExtent;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.OpposedPosition":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "OpposedPosition", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_186_ChartAxis_OpposedPosition;
                xamlMember.Setter = set_186_ChartAxis_OpposedPosition;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.TickLineSize":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "TickLineSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_187_ChartAxis_TickLineSize;
                xamlMember.Setter = set_187_ChartAxis_TickLineSize;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.ShowTrackballLabel":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ShowTrackballLabel", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_188_ChartAxis_ShowTrackballLabel;
                xamlMember.Setter = set_188_ChartAxis_ShowTrackballLabel;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.TrackballLabelTemplate":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "TrackballLabelTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_189_ChartAxis_TrackballLabelTemplate;
                xamlMember.Setter = set_189_ChartAxis_TrackballLabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.CrosshairLabelTemplate":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "CrosshairLabelTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_190_ChartAxis_CrosshairLabelTemplate;
                xamlMember.Setter = set_190_ChartAxis_CrosshairLabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.LabelTemplate":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "LabelTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_191_ChartAxis_LabelTemplate;
                xamlMember.Setter = set_191_ChartAxis_LabelTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.AutoScrollingMode":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "AutoScrollingMode", "Syncfusion.UI.Xaml.Charts.ChartAutoScrollingMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_192_ChartAxis_AutoScrollingMode;
                xamlMember.Setter = set_192_ChartAxis_AutoScrollingMode;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartAxis.AutoScrollingDelta":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "AutoScrollingDelta", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_193_ChartAxis_AutoScrollingDelta;
                xamlMember.Setter = set_193_ChartAxis_AutoScrollingDelta;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.YAxes":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "YAxes", "System.Collections.ObjectModel.ObservableCollection`1<Syncfusion.UI.Xaml.Charts.RangeAxisBase>");
                xamlMember.Getter = get_194_SfCartesianChart_YAxes;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.RangeAxisBase.EdgeLabelsVisibilityMode":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.RangeAxisBase");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "EdgeLabelsVisibilityMode", "Syncfusion.UI.Xaml.Charts.EdgeLabelsVisibilityMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_195_RangeAxisBase_EdgeLabelsVisibilityMode;
                xamlMember.Setter = set_195_RangeAxisBase_EdgeLabelsVisibilityMode;
                break;
            case "Syncfusion.UI.Xaml.Charts.RangeAxisBase.MinorTicksPerInterval":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.RangeAxisBase");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "MinorTicksPerInterval", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_196_RangeAxisBase_MinorTicksPerInterval;
                xamlMember.Setter = set_196_RangeAxisBase_MinorTicksPerInterval;
                break;
            case "Syncfusion.UI.Xaml.Charts.RangeAxisBase.MinorTickLineSize":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.RangeAxisBase");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "MinorTickLineSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_197_RangeAxisBase_MinorTickLineSize;
                xamlMember.Setter = set_197_RangeAxisBase_MinorTickLineSize;
                break;
            case "Syncfusion.UI.Xaml.Charts.RangeAxisBase.MinorGridLineStyle":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.RangeAxisBase");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "MinorGridLineStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_198_RangeAxisBase_MinorGridLineStyle;
                xamlMember.Setter = set_198_RangeAxisBase_MinorGridLineStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.RangeAxisBase.MinorTickStyle":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.RangeAxisBase");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "MinorTickStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_199_RangeAxisBase_MinorTickStyle;
                xamlMember.Setter = set_199_RangeAxisBase_MinorTickStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.RangeAxisBase.ShowMinorGridLines":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.RangeAxisBase");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ShowMinorGridLines", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_200_RangeAxisBase_ShowMinorGridLines;
                xamlMember.Setter = set_200_RangeAxisBase_ShowMinorGridLines;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.SelectionBehavior":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "SelectionBehavior", "Syncfusion.UI.Xaml.Charts.SeriesSelectionBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_201_SfCartesianChart_SelectionBehavior;
                xamlMember.Setter = set_201_SfCartesianChart_SelectionBehavior;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.ZoomPanBehavior":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ZoomPanBehavior", "Syncfusion.UI.Xaml.Charts.ChartZoomPanBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_202_SfCartesianChart_ZoomPanBehavior;
                xamlMember.Setter = set_202_SfCartesianChart_ZoomPanBehavior;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.TrackballBehavior":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "TrackballBehavior", "Syncfusion.UI.Xaml.Charts.ChartTrackballBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_203_SfCartesianChart_TrackballBehavior;
                xamlMember.Setter = set_203_SfCartesianChart_TrackballBehavior;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.CrosshairBehavior":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "CrosshairBehavior", "Syncfusion.UI.Xaml.Charts.ChartCrosshairBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_204_SfCartesianChart_CrosshairBehavior;
                xamlMember.Setter = set_204_SfCartesianChart_CrosshairBehavior;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.PlotAreaBorderBrush":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "PlotAreaBorderBrush", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_205_SfCartesianChart_PlotAreaBorderBrush;
                xamlMember.Setter = set_205_SfCartesianChart_PlotAreaBorderBrush;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.PlotAreaBorderThickness":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "PlotAreaBorderThickness", "Microsoft.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_206_SfCartesianChart_PlotAreaBorderThickness;
                xamlMember.Setter = set_206_SfCartesianChart_PlotAreaBorderThickness;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.PlotAreaBackground":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "PlotAreaBackground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_207_SfCartesianChart_PlotAreaBackground;
                xamlMember.Setter = set_207_SfCartesianChart_PlotAreaBackground;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.IsTransposed":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "IsTransposed", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_208_SfCartesianChart_IsTransposed;
                xamlMember.Setter = set_208_SfCartesianChart_IsTransposed;
                break;
            case "Syncfusion.UI.Xaml.Charts.SfCartesianChart.EnableSideBySideSeriesPlacement":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SfCartesianChart");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "EnableSideBySideSeriesPlacement", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_209_SfCartesianChart_EnableSideBySideSeriesPlacement;
                xamlMember.Setter = set_209_SfCartesianChart_EnableSideBySideSeriesPlacement;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.Legend":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Legend", "Syncfusion.UI.Xaml.Charts.ChartLegend");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_210_ChartBase_Legend;
                xamlMember.Setter = set_210_ChartBase_Legend;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.TooltipBehavior":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "TooltipBehavior", "Syncfusion.UI.Xaml.Charts.ChartTooltipBehavior");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_211_ChartBase_TooltipBehavior;
                xamlMember.Setter = set_211_ChartBase_TooltipBehavior;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.HorizontalHeaderAlignment":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "HorizontalHeaderAlignment", "Microsoft.UI.Xaml.HorizontalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_212_ChartBase_HorizontalHeaderAlignment;
                xamlMember.Setter = set_212_ChartBase_HorizontalHeaderAlignment;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartBase.VerticalHeaderAlignment":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartBase");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "VerticalHeaderAlignment", "Microsoft.UI.Xaml.VerticalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_213_ChartBase_VerticalHeaderAlignment;
                xamlMember.Setter = set_213_ChartBase_VerticalHeaderAlignment;
                break;
            case "Syncfusion.UI.Xaml.Charts.CategoryAxis.Interval":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CategoryAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Interval", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_214_CategoryAxis_Interval;
                xamlMember.Setter = set_214_CategoryAxis_Interval;
                break;
            case "Syncfusion.UI.Xaml.Charts.CategoryAxis.LabelPlacement":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CategoryAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "LabelPlacement", "Syncfusion.UI.Xaml.Charts.LabelPlacement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_215_CategoryAxis_LabelPlacement;
                xamlMember.Setter = set_215_CategoryAxis_LabelPlacement;
                break;
            case "Syncfusion.UI.Xaml.Charts.NumericalAxis.Interval":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.NumericalAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Interval", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_216_NumericalAxis_Interval;
                xamlMember.Setter = set_216_NumericalAxis_Interval;
                break;
            case "Syncfusion.UI.Xaml.Charts.NumericalAxis.Minimum":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.NumericalAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Minimum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_217_NumericalAxis_Minimum;
                xamlMember.Setter = set_217_NumericalAxis_Minimum;
                break;
            case "Syncfusion.UI.Xaml.Charts.NumericalAxis.Maximum":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.NumericalAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Maximum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_218_NumericalAxis_Maximum;
                xamlMember.Setter = set_218_NumericalAxis_Maximum;
                break;
            case "Syncfusion.UI.Xaml.Charts.NumericalAxis.RangePadding":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.NumericalAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "RangePadding", "Syncfusion.UI.Xaml.Charts.NumericalPadding");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_219_NumericalAxis_RangePadding;
                xamlMember.Setter = set_219_NumericalAxis_RangePadding;
                break;
            case "Syncfusion.UI.Xaml.Charts.NumericalAxis.ActualMinimum":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.NumericalAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ActualMinimum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_220_NumericalAxis_ActualMinimum;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.NumericalAxis.ActualMaximum":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.NumericalAxis");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ActualMaximum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_221_NumericalAxis_ActualMaximum;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.XyDataSeries.YBindingPath":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.XyDataSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "YBindingPath", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_222_XyDataSeries_YBindingPath;
                xamlMember.Setter = set_222_XyDataSeries_YBindingPath;
                break;
            case "Syncfusion.UI.Xaml.Charts.SplineSeries.CustomTemplate":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SplineSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "CustomTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_223_SplineSeries_CustomTemplate;
                xamlMember.Setter = set_223_SplineSeries_CustomTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.SplineSeries.Type":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SplineSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Type", "Syncfusion.UI.Xaml.Charts.SplineType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_224_SplineSeries_Type;
                xamlMember.Setter = set_224_SplineSeries_Type;
                break;
            case "Syncfusion.UI.Xaml.Charts.SplineSeries.StrokeDashArray":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.SplineSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "StrokeDashArray", "Microsoft.UI.Xaml.Media.DoubleCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_225_SplineSeries_StrokeDashArray;
                xamlMember.Setter = set_225_SplineSeries_StrokeDashArray;
                break;
            case "Syncfusion.UI.Xaml.Charts.XyDataSeries.StrokeWidth":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.XyDataSeries");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "StrokeWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_226_XyDataSeries_StrokeWidth;
                xamlMember.Setter = set_226_XyDataSeries_StrokeWidth;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings.ContentTemplate":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ContentTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_227_ChartDataLabelSettings_ContentTemplate;
                xamlMember.Setter = set_227_ChartDataLabelSettings_ContentTemplate;
                break;
            case "Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings.BarLabelAlignment":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "BarLabelAlignment", "Syncfusion.UI.Xaml.Charts.BarLabelAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_228_CartesianDataLabelSettings_BarLabelAlignment;
                xamlMember.Setter = set_228_CartesianDataLabelSettings_BarLabelAlignment;
                break;
            case "Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings.Position":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.CartesianDataLabelSettings");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Position", "Syncfusion.UI.Xaml.Charts.DataLabelPosition");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_229_CartesianDataLabelSettings_Position;
                xamlMember.Setter = set_229_CartesianDataLabelSettings_Position;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings.Rotation":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Rotation", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_230_ChartDataLabelSettings_Rotation;
                xamlMember.Setter = set_230_ChartDataLabelSettings_Rotation;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings.Background":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Background", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_231_ChartDataLabelSettings_Background;
                xamlMember.Setter = set_231_ChartDataLabelSettings_Background;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings.BorderThickness":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "BorderThickness", "Microsoft.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_232_ChartDataLabelSettings_BorderThickness;
                xamlMember.Setter = set_232_ChartDataLabelSettings_BorderThickness;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings.BorderBrush":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "BorderBrush", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_233_ChartDataLabelSettings_BorderBrush;
                xamlMember.Setter = set_233_ChartDataLabelSettings_BorderBrush;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings.Margin":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Margin", "Microsoft.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_234_ChartDataLabelSettings_Margin;
                xamlMember.Setter = set_234_ChartDataLabelSettings_Margin;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings.FontStyle":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "FontStyle", "Windows.UI.Text.FontStyle");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_235_ChartDataLabelSettings_FontStyle;
                xamlMember.Setter = set_235_ChartDataLabelSettings_FontStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings.FontSize":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "FontSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_236_ChartDataLabelSettings_FontSize;
                xamlMember.Setter = set_236_ChartDataLabelSettings_FontSize;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings.Foreground":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Foreground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_237_ChartDataLabelSettings_Foreground;
                xamlMember.Setter = set_237_ChartDataLabelSettings_Foreground;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings.UseSeriesPalette":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "UseSeriesPalette", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_238_ChartDataLabelSettings_UseSeriesPalette;
                xamlMember.Setter = set_238_ChartDataLabelSettings_UseSeriesPalette;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings.HighlightOnSelection":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "HighlightOnSelection", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_239_ChartDataLabelSettings_HighlightOnSelection;
                xamlMember.Setter = set_239_ChartDataLabelSettings_HighlightOnSelection;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings.HorizontalAlignment":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "HorizontalAlignment", "Microsoft.UI.Xaml.HorizontalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_240_ChartDataLabelSettings_HorizontalAlignment;
                xamlMember.Setter = set_240_ChartDataLabelSettings_HorizontalAlignment;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings.VerticalAlignment":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "VerticalAlignment", "Microsoft.UI.Xaml.VerticalAlignment");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_241_ChartDataLabelSettings_VerticalAlignment;
                xamlMember.Setter = set_241_ChartDataLabelSettings_VerticalAlignment;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings.ConnectorHeight":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ConnectorHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_242_ChartDataLabelSettings_ConnectorHeight;
                xamlMember.Setter = set_242_ChartDataLabelSettings_ConnectorHeight;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings.ConnectorRotation":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ConnectorRotation", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_243_ChartDataLabelSettings_ConnectorRotation;
                xamlMember.Setter = set_243_ChartDataLabelSettings_ConnectorRotation;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings.ConnectorLineStyle":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ConnectorLineStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_244_ChartDataLabelSettings_ConnectorLineStyle;
                xamlMember.Setter = set_244_ChartDataLabelSettings_ConnectorLineStyle;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings.ShowConnectorLine":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "ShowConnectorLine", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_245_ChartDataLabelSettings_ShowConnectorLine;
                xamlMember.Setter = set_245_ChartDataLabelSettings_ShowConnectorLine;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings.FontFamily":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "FontFamily", "Microsoft.UI.Xaml.Media.FontFamily");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_246_ChartDataLabelSettings_FontFamily;
                xamlMember.Setter = set_246_ChartDataLabelSettings_FontFamily;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings.Series":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Series", "Syncfusion.UI.Xaml.Charts.ChartSeries");
                xamlMember.Getter = get_247_ChartDataLabelSettings_Series;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings.Context":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Context", "Syncfusion.UI.Xaml.Charts.LabelContext");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_248_ChartDataLabelSettings_Context;
                xamlMember.Setter = set_248_ChartDataLabelSettings_Context;
                break;
            case "Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings.Format":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Charts.ChartDataLabelSettings");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Format", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_249_ChartDataLabelSettings_Format;
                xamlMember.Setter = set_249_ChartDataLabelSettings_Format;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Children":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Children", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>");
                xamlMember.Getter = get_250_TreeViewNode_Children;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Content":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_251_TreeViewNode_Content;
                xamlMember.Setter = set_251_TreeViewNode_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Depth":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Depth", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_252_TreeViewNode_Depth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasChildren":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "HasChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_253_TreeViewNode_HasChildren;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasUnrealizedChildren":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.Getter = get_254_TreeViewNode_HasUnrealizedChildren;
                xamlMember.Setter = set_254_TreeViewNode_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.IsExpanded":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_255_TreeViewNode_IsExpanded;
                xamlMember.Setter = set_255_TreeViewNode_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Parent":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "Parent", "Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember.Getter = get_256_TreeViewNode_Parent;
                xamlMember.SetIsReadOnly();
                break;
            case "Syncfusion.UI.Xaml.Core.DoubleToObjectConverter.TrueValue":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Core.DoubleToObjectConverter");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "TrueValue", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_257_DoubleToObjectConverter_TrueValue;
                xamlMember.Setter = set_257_DoubleToObjectConverter_TrueValue;
                break;
            case "Syncfusion.UI.Xaml.Core.DoubleToObjectConverter.FalseValue":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Core.DoubleToObjectConverter");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "FalseValue", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_258_DoubleToObjectConverter_FalseValue;
                xamlMember.Setter = set_258_DoubleToObjectConverter_FalseValue;
                break;
            case "Syncfusion.UI.Xaml.Core.DoubleToObjectConverter.NullValue":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Core.DoubleToObjectConverter");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "NullValue", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_259_DoubleToObjectConverter_NullValue;
                xamlMember.Setter = set_259_DoubleToObjectConverter_NullValue;
                break;
            case "Syncfusion.UI.Xaml.Core.DoubleToObjectConverter.GreaterThan":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Core.DoubleToObjectConverter");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "GreaterThan", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_260_DoubleToObjectConverter_GreaterThan;
                xamlMember.Setter = set_260_DoubleToObjectConverter_GreaterThan;
                break;
            case "Syncfusion.UI.Xaml.Core.DoubleToObjectConverter.LessThan":
                userType = (global::MyShop.MyShop_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Syncfusion.UI.Xaml.Core.DoubleToObjectConverter");
                xamlMember = new global::MyShop.MyShop_XamlTypeInfo.XamlMember(this, "LessThan", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_261_DoubleToObjectConverter_LessThan;
                xamlMember.Setter = set_261_DoubleToObjectConverter_LessThan;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);
    internal delegate object BoxInstanceMethod(object instance);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::MyShop.MyShop_XamlTypeInfo.XamlSystemBaseType
        , global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        global::MyShop.MyShop_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Microsoft.UI.Xaml.Markup.IXamlType _baseType;
        global::Microsoft.UI.Xaml.Markup.IXamlType _boxedType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::MyShop.MyShop_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Microsoft.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }
        override public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { return _boxedType; } }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (BoxedType != null)
            {
                return BoxInstance(BoxedType.CreateFromString(input));
            }

            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                long value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    long enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt64(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt64(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt64(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(this.UnderlyingType));
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }
        public BoxInstanceMethod BoxInstance {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void SetBoxedType(global::Microsoft.UI.Xaml.Markup.IXamlType boxedType)
        {
            _boxedType = boxedType;
        }

        public object BoxType<T>(object instance) where T: struct
        {
            T unwrapped = (T)instance;
            return new global::System.Nullable<T>(unwrapped);
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2310")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Microsoft.UI.Xaml.Markup.IXamlMember
    {
        global::MyShop.MyShop_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::MyShop.MyShop_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Microsoft.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Microsoft.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

